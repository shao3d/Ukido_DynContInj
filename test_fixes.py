#!/usr/bin/env python3
"""–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π ROI –∏ rate limiting."""

import requests
import json
import time

def test_fixes():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""
    
    url = "http://localhost:8000/chat"
    user_id = f"test_fixes_{int(time.time())}"
    
    print("=" * 60)
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–∞–∑—ã –ø—Ä–æ ROI
    print("\nüìù –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ—Ä–∞–∑—ã –ø—Ä–æ ROI")
    print("-" * 40)
    
    data = {
        "user_id": user_id,
        "message": "–≠—Ç–æ –≤—Å—ë —Ä–∞–∑–≤–æ–¥ –Ω–∞ –¥–µ–Ω—å–≥–∏! –î–æ–∫–∞–∂–∏—Ç–µ —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫!"
    }
    
    response = requests.post(url, json=data, timeout=15)
    if response.status_code == 200:
        result = response.json()
        bot_response = result.get('response', '')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—É—é –∏ –Ω–æ–≤—É—é —Ñ—Ä–∞–∑—ã
        if "4,3 –≥—Ä–∏–≤–Ω—ã" in bot_response or "4.3 –≥—Ä–∏–≤–Ω—ã" in bot_response:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–∞–π–¥–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Ñ—Ä–∞–∑–∞ –ø—Ä–æ 4.3 –≥—Ä–∏–≤–Ω—ã!")
        elif "–æ–∫—É–ø–∞—é—Ç—Å—è –±–æ–ª–µ–µ —á–µ–º –≤ 4 —Ä–∞–∑–∞" in bot_response or "–æ–∫—É–ø–∞—é—Ç—Å—è –≤ 4 —Ä–∞–∑–∞" in bot_response:
            print("‚úÖ –£–°–ü–ï–•: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ—Ä–∞–∑–∞ –ø—Ä–æ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å!")
        else:
            print("‚ö†Ô∏è  ROI –Ω–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç–µ (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
        
        print(f"\n–û—Ç–≤–µ—Ç –±–æ—Ç–∞ (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤):")
        print(bot_response[:200] + "...")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting –¥–ª—è CTA
    print("\n\nüìù –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting –¥–ª—è CTA (price_sensitive)")
    print("-" * 40)
    
    messages = [
        "7000 –≥—Ä–Ω? –≠—Ç–æ —Å–ª–∏—à–∫–æ–º –¥–æ—Ä–æ–≥–æ!",
        "–ó–∞ —ç—Ç–∏ –¥–µ–Ω—å–≥–∏ —è –Ω–∞–π–º—É —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞!",
        "–£ –≤–∞—Å –µ—Å—Ç—å —Å–∫–∏–¥–∫–∏ —Ö–æ—Ç—å –∫–∞–∫–∏–µ-—Ç–æ?",
        "–ê –µ—Å–ª–∏ –¥–≤–æ–∏—Ö –¥–µ—Ç–µ–π –∑–∞–ø–∏—Å–∞—Ç—å?"
    ]
    
    cta_count = 0
    for i, msg in enumerate(messages, 1):
        print(f"\n[{i}/4] –û—Ç–ø—Ä–∞–≤–ª—è—é: {msg}")
        
        data = {
            "user_id": user_id,
            "message": msg
        }
        
        response = requests.post(url, json=data, timeout=15)
        if response.status_code == 200:
            result = response.json()
            bot_response = result.get('response', '')
            signal = result.get('user_signal', '')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ CTA –ø—Ä–æ —Å–∫–∏–¥–∫–∏
            cta_phrases = ["–ö—Å—Ç–∞—Ç–∏, —É –Ω–∞—Å –¥–µ–π—Å—Ç–≤—É—é—Ç —Å–∫–∏–¥–∫–∏", "—Å–∫–∏–¥–∫–∞", "—Ä–∞—Å—Å—Ä–æ—á–∫–∞", "10% –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –æ–ø–ª–∞—Ç–µ"]
            has_cta = any(phrase in bot_response for phrase in cta_phrases)
            
            if has_cta:
                cta_count += 1
                print(f"  üì¢ CTA –æ–±–Ω–∞—Ä—É–∂–µ–Ω! (–≤—Å–µ–≥–æ: {cta_count})")
            else:
                print(f"  ‚úÖ CTA –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
            
            print(f"  Signal: {signal}")
        
        time.sleep(0.5)
    
    print("\n" + "=" * 40)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"  CTA –ø–æ—è–≤–∏–ª—Å—è {cta_count} —Ä–∞–∑(–∞) –∏–∑ 4 —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    if cta_count <= 2:
        print("  ‚úÖ Rate limiting —Ä–∞–±–æ—Ç–∞–µ—Ç! (–Ω–µ –±–æ–ª–µ–µ 2 —Ä–∞–∑)")
    else:
        print(f"  ‚ùå Rate limiting –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç! ({cta_count} > 2)")
    
    print("=" * 60)

if __name__ == "__main__":
    # –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    time.sleep(2)
    test_fixes()