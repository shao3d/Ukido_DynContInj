"""
router.py - –ü—Å–µ–≤–¥–æ-–¥–≤—É—Ö—ç—Ç–∞–ø–Ω—ã–π LLM —Ä–æ—É—Ç–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
–í–µ—Ä—Å–∏—è 2.0: –î–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è + –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ –æ–¥–Ω–æ–º –ø—Ä–æ–º–ø—Ç–µ
"""

import json
from pathlib import Path
from typing import List, Dict, Optional
from openrouter_client import OpenRouterClient
from gemini_cached_client import GeminiCachedClient
from config import Config
from social_intents import has_business_signals_extended
from social_state import SocialStateManager  # –ù—É–∂–µ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π
# –£–¥–∞–ª–µ–Ω—ã –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:
# detect_social_intent, SocialIntent - –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã (Gemini –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç)
# SocialResponder - –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ main.py)
from standard_responses import get_offtopic_response, DEFAULT_FALLBACK, NEED_SIMPLIFICATION_MESSAGE


class Router:
    """–†–æ—É—Ç–µ—Ä –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –≤—ã–±–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    
    def __init__(self, use_cache: bool = True):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Å–∞–º–º–∞—Ä–∏
        
        Args:
            use_cache: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è Gemini
        """
        config = Config()
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è Gemini –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
        if use_cache:
            self.client = GeminiCachedClient(
                config.OPENROUTER_API_KEY,
                seed=config.SEED,
                max_tokens=config.MAX_TOKENS,
                temperature=config.TEMPERATURE
            )
        else:
            self.client = OpenRouterClient(
                config.OPENROUTER_API_KEY,
                seed=config.SEED,
                max_tokens=config.MAX_TOKENS,
                temperature=config.TEMPERATURE,
                model="google/gemini-2.5-flash"
            )
        
        self.summaries = self._load_summaries()
        self.use_cache = use_cache
        # –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ main.py
        # –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç Gemini
        self._social_state = SocialStateManager()  # –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∞–º–º–∞—Ä–∏ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
        if not self.summaries:
            print("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: summaries.json –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!")
    
    def _is_recent_session(self, history: List[Dict[str, str]]) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª–∞ –ª–∏ –Ω–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –¥–∏–∞–ª–æ–≥–µ (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —á–∞—Å–∞)
        
        Args:
            history: –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
            
        Returns:
            True –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –Ω–µ–¥–∞–≤–Ω–æ (—Å–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞)
        """
        # –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç –∏–ª–∏ –æ–Ω–∞ –ø—É—Å—Ç–∞—è - —Å—á–∏—Ç–∞–µ–º –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–µ–π
        if not history:
            return False
            
        # –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, —Å—á–∏—Ç–∞–µ–º —Å–µ—Å—Å–∏—é –∞–∫—Ç–∏–≤–Ω–æ–π
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫
        return len(history) > 0
    
    def _load_summaries(self) -> dict:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç summaries.json –∏–∑ data/"""
        try:
            # –ü—É—Ç—å: src/ -> –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ -> data/summaries.json
            path = Path(__file__).parent.parent / "data" / "summaries.json"
            with open(path, "r", encoding="utf-8") as f:
                data = json.load(f)
                print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(data)} —Å–∞–º–º–∞—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
                return data
        except FileNotFoundError:
            print(f"‚ùå –§–∞–π–ª summaries.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return {}
        except json.JSONDecodeError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
            return {}
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return {}
    
    
    async def route(self, user_message: str, history: Optional[List[Dict[str, str]]] = None, user_id: str = "anonymous") -> dict:
        """
        –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ—à–µ–Ω–∏–µ –æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
        
        Args:
            user_message: –¢–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            history: –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ —Ñ–æ—Ä–º–∞—Ç–∞ [{"role": "user/assistant", "content": "..."}]
            user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            
        Returns:
            –î–ª—è success: {"status": "success", "documents": ["doc1.md", "doc2.md"], "decomposed_questions": [...]}
            –î–ª—è –¥—Ä—É–≥–∏—Ö: {"status": "...", "message": "...", "decomposed_questions": [...]}
        """
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ response_generator
        original_message = user_message
        
        # –ó–∞—â–∏—Ç–∞ –æ—Ç None
        if history is None:
            history = []

        # –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –£–õ–¨–¢–†–ê-–ö–†–ê–¢–ö–ò–• –ö–û–ù–¢–ï–ö–°–¢–£–ê–õ–¨–ù–´–• –í–û–ü–†–û–°–û–í
        ultra_short_patterns = ["–∞?", "–∏?", "–∏ –≤—Å—ë?", "–∞ –¥–∞–ª—å—à–µ?", "–∏ —á—Ç–æ?", "–Ω—É –∏?"]
        if user_message.strip().lower() in ultra_short_patterns and history:
            # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            last_assistant_msg = None
            for msg in reversed(history):
                if msg.get("role") == "assistant":
                    last_assistant_msg = msg.get("content", "")
                    break
            
            if last_assistant_msg:
                print(f"üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω —É–ª—å—Ç—Ä–∞-–∫—Ä–∞—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å '{user_message}' - –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏")
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—É –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
                if "—Ü–µ–Ω" in last_assistant_msg.lower() or "—Å—Ç–æ–∏" in last_assistant_msg.lower():
                    expanded_question = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ü–µ–Ω–∞—Ö –∏ —Å–∫–∏–¥–∫–∞—Ö"
                elif "–∫—É—Ä—Å" in last_assistant_msg.lower():
                    expanded_question = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫—É—Ä—Å–∞—Ö"
                else:
                    expanded_question = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ"
                
                # –ü–æ–¥–º–µ–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π
                user_message = expanded_question
                print(f"üìù –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å: {expanded_question}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª –ª–∏ fuzzy matching –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        _, was_fuzzy_matched = has_business_signals_extended(user_message)
        
        # –õ–æ–≥–∏—Ä—É–µ–º —á—Ç–æ –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–µ–ø–µ—Ä—å –∏–¥—É—Ç –≤ Gemini –¥–ª—è —É–º–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
        print(f"‚ÑπÔ∏è Routing to Gemini: {user_message[:50]}..." if len(user_message) > 50 else f"‚ÑπÔ∏è Routing to Gemini: {user_message}")
        
        # –í–ê–ñ–ù–û: –ë–æ–ª—å—à–µ –ù–ï –±–ª–æ–∫–∏—Ä—É–µ–º mixed –∏–Ω—Ç–µ–Ω—Ç—ã!
        # Gemini —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç social_context, user_signal –∏ status
        # –≠—Ç–æ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å —Ñ—Ä–∞–∑–∞–º–∏ —Ç–∏–ø–∞ "–°–ø–∞—Å–∏–±–æ, –∑–∞–ø–∏—à–∏—Ç–µ –Ω–∞—Å"
        
        # –°—Ç—Ä–æ–∏–º –ø—Ä–æ–º–ø—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ (—Ä–∞–∑–¥–µ–ª—è–µ–º —Ä–æ–ª–∏)
        prompts = self._build_router_prompts(user_message, history)
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Gemini —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
            if self.use_cache and isinstance(self.client, GeminiCachedClient):
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è Gemini
                response = await self.client.chat_with_cache(
                    system_content=prompts["system"],
                    user_message=prompts["user"],
                    history=None  # –ò—Å—Ç–æ—Ä–∏—è —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞ –≤ user_message
                )
            else:
                # –û–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥
                messages = [
                    {"role": "system", "content": prompts["system"]},
                    {"role": "user", "content": prompts["user"]},
                ]
                response = await self.client.chat(messages)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π
            if not response or response.strip() == "":
                print("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç Gemini")
                return self._fallback_response()
            
            # –ü–∞—Ä—Å–∏–º JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
            try:
                # –û—á–∏—â–∞–µ–º –æ—Ç markdown code blocks (```json...```)
                cleaned_response = response.strip()
                if cleaned_response.startswith("```json"):
                    cleaned_response = cleaned_response[7:]
                if cleaned_response.endswith("```"):
                    cleaned_response = cleaned_response[:-3]
                cleaned_response = cleaned_response.strip()
                
                result = json.loads(cleaned_response)
                
                # –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
                if not isinstance(result, dict):
                    raise ValueError("Response is not a dict")
                    
                if "status" not in result:
                    raise ValueError("Missing 'status' field")
                
                # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ decomposed_questions (–≤—Å–µ–≥–¥–∞ —Å–ø–∏—Å–æ–∫)
                if "decomposed_questions" not in result or not isinstance(result.get("decomposed_questions"), list):
                    result["decomposed_questions"] = []
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—É—Å–∞
                valid_statuses = ["success", "offtopic", "need_simplification"]
                valid_signals = ["price_sensitive", "anxiety_about_child", "ready_to_buy", "exploring_only"]
                
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ Gemini –ø—É—Ç–∞–µ—Ç status –∏ user_signal
                if result["status"] in valid_signals and result["status"] not in valid_statuses:
                    # Gemini –≤–µ—Ä–Ω—É–ª user_signal –≤–º–µ—Å—Ç–æ status - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
                    actual_signal = result["status"]
                    result["status"] = "success"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é success –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
                    if "user_signal" not in result:
                        result["user_signal"] = actual_signal
                    print(f"‚ö†Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—É—Ç–∞–Ω–∏—Ü–∞ status/signal: {actual_signal} ‚Üí success")
                
                if result["status"] not in valid_statuses:
                    raise ValueError(f"Invalid status: {result['status']}")
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å—Ç–∞—Ç—É—Å—É
                if "decomposed_questions" in result:
                    questions_count = len(result["decomposed_questions"])
                    # MVP: –¥–æ–ø—É—Å–∫–∞–µ–º –¥–æ 3 –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Å—Ç–∞—Ç—É—Å–µ success, 4+ ‚Üí need_simplification
                    if result["status"] == "success" and questions_count > 3:
                        print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Å—Ç–∞—Ç—É—Å 'success' —Å {questions_count} –≤–æ–ø—Ä–æ—Å–∞–º–∏! –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ 'need_simplification'")
                        result["status"] = "need_simplification"
                        result["message"] = NEED_SIMPLIFICATION_MESSAGE
                        if "documents" in result:
                            del result["documents"]

                    # –ö–æ—Ä—Ä–µ–∫—Ü–∏—è: –µ—Å–ª–∏ –º–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ need_simplification –ø—Ä–∏ 1‚Äì3 –≤–æ–ø—Ä–æ—Å–∞—Ö, –≤—ã–ø–æ–ª–Ω—è–µ–º –æ–¥–∏–Ω –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å –∂—ë—Å—Ç–∫–æ–π –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
                    if result.get("status") == "need_simplification" and 1 <= questions_count <= 3:
                        print("üîÅ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å: need_simplification –ø—Ä–∏ ‚â§3 –≤–æ–ø—Ä–æ—Å–∞—Ö. –¢—Ä–µ–±—É–µ–º success.")
                        strict_hint = (
                            "\n=== –ö–û–†–†–ï–ö–¶–ò–Ø (–°–¢–†–û–ì–û) ===\n"
                            "–ï—Å–ª–∏ –≤ decomposed_questions –†–û–í–ù–û 1, 2 –∏–ª–∏ 3 –≤–æ–ø—Ä–æ—Å–∞ ‚Äî –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–µ—Ä–Ω–∏ status: \"success\".\n"
                            "–ü–æ–¥–±–µ—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º: –º–∞–∫—Å–∏–º—É–º 4 –Ω–∞ –≤–µ—Å—å –æ—Ç–≤–µ—Ç; –ø–æ –æ–¥–Ω–æ–º—É –æ—Å–Ω–æ–≤–Ω–æ–º—É (primary) –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –∏, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –æ–¥–∏–Ω –æ–±—â–∏–π support-–¥–æ–∫—É–º–µ–Ω—Ç, –µ—Å–ª–∏ –æ–Ω –ø–æ–∫—Ä—ã–≤–∞–µ—Ç 2+ –≤–æ–ø—Ä–æ—Å–æ–≤.\n"
                            "–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON –ø–æ —Ñ–æ—Ä–º–∞—Ç—É –Ω–∏–∂–µ, –±–µ–∑ markdown –∏ —Ç–µ–∫—Å—Ç–∞.\n"
                        )
                        prompts2 = self._build_router_prompts(user_message, history, extra_hint=strict_hint)
                        
                        # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                        if self.use_cache and isinstance(self.client, GeminiCachedClient):
                            response2 = await self.client.chat_with_cache(
                                system_content=prompts2["system"],
                                user_message=prompts2["user"],
                                history=None
                            )
                        else:
                            messages2 = [
                                {"role": "system", "content": prompts2["system"]},
                                {"role": "user", "content": prompts2["user"]},
                            ]
                            response2 = await self.client.chat(messages2)
                        if response2 and response2.strip():
                            cleaned2 = response2.strip()
                            if cleaned2.startswith("```json"):
                                cleaned2 = cleaned2[7:]
                            if cleaned2.endswith("```"):
                                cleaned2 = cleaned2[:-3]
                            cleaned2 = cleaned2.strip()
                            try:
                                result2 = json.loads(cleaned2)
                                if isinstance(result2, dict) and result2.get("status") in ["success", "offtopic", "need_simplification"]:
                                    # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ decomposed_questions –≤ –æ—Ç–≤–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–∞
                                    if "decomposed_questions" not in result2 or not isinstance(result2.get("decomposed_questions"), list):
                                        result2["decomposed_questions"] = []
                                    result = result2
                                    print("‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç.")
                            except Exception:
                                print("‚ö†Ô∏è –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, –æ—Å—Ç–∞–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π.")
                
                # –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –µ—Å–ª–∏ –≤—Å—ë –µ—â—ë need_simplification –ø—Ä–∏ ‚â§3 –≤–æ–ø—Ä–æ—Å–∞—Ö
                # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –º–µ–Ω—è–µ–º –Ω–∞ success (Gemini –∏–Ω–æ–≥–¥–∞ —É–ø—Ä—è–º–∏—Ç—Å—è)
                if result.get("status") == "need_simplification":
                    questions_count = len(result.get("decomposed_questions", []))
                    if 1 <= questions_count <= 3:
                        print(f"‚ö†Ô∏è OVERRIDE: need_simplification –ø—Ä–∏ {questions_count} –≤–æ–ø—Ä–æ—Å–∞—Ö ‚Üí success")
                        result["status"] = "success"
                        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
                        if questions_count > 0:
                            # –ü—Ä–æ—Å—Ç–∞—è —ç–≤—Ä–∏—Å—Ç–∏–∫–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                            question_text = " ".join(result["decomposed_questions"]).lower()
                            result["documents"] = []
                            if "—Å–∫–∏–¥–∫" in question_text or "—Ü–µ–Ω" in question_text or "—Å—Ç–æ–∏" in question_text:
                                result["documents"].append("pricing.md")
                            if "–±–ª–æ–≥–µ—Ä" in question_text or "—Ä–µ–∫–ª–∞–º" in question_text or "—Å–æ—Ç—Ä—É–¥–Ω–∏—á" in question_text:
                                result["documents"].append("partners.md")
                            if not result["documents"]:
                                result["documents"] = ["faq.md"]  # Fallback –¥–æ–∫—É–º–µ–Ω—Ç
                
                # –î–ª—è success –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å documents, –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - message
                if result["status"] == "success":
                    if "documents" not in result or not isinstance(result["documents"], list):
                        raise ValueError("Success status requires 'documents' list")
                    # –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ 4 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (MVP)
                    docs_in = result.get("documents", [])
                    seen = set()
                    docs_dedup = []
                    for d in docs_in:
                        if isinstance(d, str) and d not in seen:
                            seen.add(d)
                            docs_dedup.append(d)
                    if len(docs_dedup) > 4:
                        print(f"‚ÑπÔ∏è –û–±—Ä–µ–∑–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–æ 4 (–±—ã–ª–æ {len(docs_dedup)})")
                        docs_dedup = docs_dedup[:4]
                    
                    # üî¥ –ó–ê–©–ò–¢–ê –û–¢ –ì–ê–õ–õ–Æ–¶–ò–ù–ê–¶–ò–ô: –ï—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç –∏–ª–∏ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ ‚Üí offtopic
                    if not docs_dedup:
                        print("‚ö†Ô∏è –ó–ê–©–ò–¢–ê: –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ ‚Üí –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ offtopic")
                        result["status"] = "offtopic"
                        result["message"] = get_offtopic_response()
                        del result["documents"]
                    else:
                        result["documents"] = docs_dedup
                        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è success
                        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {result['status']}")
                        print(f"üìã –í—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã: {', '.join(result['documents'])}")
                        if "decomposed_questions" in result:
                            print(f"üîç –î–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã: {result['decomposed_questions']}")
                else:
                    # –î–ª—è offtopic –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É –≤–º–µ—Å—Ç–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                    if result["status"] == "offtopic":
                        result["message"] = get_offtopic_response()
                        print(f"‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å: offtopic (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É)")
                    elif "message" not in result or not isinstance(result["message"], str):
                        raise ValueError(f"{result['status']} status requires 'message' string")
                    else:
                        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
                        print(f"‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å: {result['status']}")
                    if "decomposed_questions" in result:
                        print(f"üîç –î–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã: {result['decomposed_questions']}")
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥ fuzzy_matched –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                result["fuzzy_matched"] = was_fuzzy_matched
                
                # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–º–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ response_generator
                result["original_message"] = original_message
                
                # MVP: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è mixed –∑–∞–ø—Ä–æ—Å–æ–≤
                if result.get("status") == "success" and result.get("social_context") == "greeting":
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —É–∂–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
                    if self._social_state.has_greeted(user_id):
                        print(f"üîç DEBUG: Mixed –∑–∞–ø—Ä–æ—Å —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –æ—Ç {user_id[:8]}...")
                        result["social_context"] = "repeated_greeting"
                    else:
                        # –ü–µ—Ä–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ mixed –∑–∞–ø—Ä–æ—Å–µ - –æ—Ç–º–µ—á–∞–µ–º
                        self._social_state.mark_greeted(user_id)
                        print(f"‚ÑπÔ∏è Router: –ü–µ—Ä–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ mixed –∑–∞–ø—Ä–æ—Å–µ –æ—Ç {user_id[:8]}...")
                
                
                return result
                
            except (json.JSONDecodeError, ValueError) as e:
                print(f"‚ö†Ô∏è –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Gemini: {e}")
                return self._fallback_response()
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ Gemini: {e}")
            return self._fallback_response()
    
    def _build_router_prompts(self, user_message: str, history: List[Dict[str, str]], extra_hint: Optional[str] = None) -> Dict[str, str]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–≤–∞ –±–ª–æ–∫–∞ –ø—Ä–æ–º–ø—Ç–∞: system –∏ user.
        system ‚Äî —Ä–æ–ª—å –∏ —Å—Ç—Ä–æ–≥–∏–µ –ø—Ä–∞–≤–∏–ª–∞/—Ñ–æ—Ä–º–∞—Ç.
        user ‚Äî –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π, –∏—Å—Ç–æ—Ä–∏—è, —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —à–∞–≥–∞–º (+extra_hint).
        """
        # System: —Ä–æ–ª—å + —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –∫–∞–∫ —Å—Ç—Ä–æ–≥–∏–µ –ø—Ä–∞–≤–∏–ª–∞
        system_content = self._get_role_section()
        system_content += self._get_response_format_section()

        # User: –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π + –∏—Å—Ç–æ—Ä–∏—è + —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å + —ç—Ç–∞–ø—ã
        user_content = ""
        user_content += self._get_summaries_section()
        user_content += self._get_history_section(history)
        user_content += f"\n=== –¢–ï–ö–£–©–ò–ô –ó–ê–ü–†–û–° ===\nUser: {user_message}\n\n"
        user_content += self._get_decomposition_section()
        user_content += self._get_classification_section()
        if extra_hint:
            user_content += extra_hint + "\n\n"
        return {"system": system_content, "user": user_content}
    
    def _get_role_section(self) -> str:
        """–°–µ–∫—Ü–∏—è —Å —Ä–æ–ª—å—é –∏ –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏"""
        return """–¢—ã - –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å –¥–µ—Ç—Å–∫–æ–π —à–∫–æ–ª—ã soft skills Ukido.

–î–í–ê –≠–¢–ê–ü–ê –ê–ù–ê–õ–ò–ó–ê:
1. –î–ï–ö–û–ú–ü–û–ó–ò–¶–ò–Ø - –∏–∑–≤–ª–µ—á—å –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã
2. –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–Ø - —Å—Ç–∞—Ç—É—Å –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã

–ü–†–ê–í–ò–õ–ê:
- –ú–∞–∫—Å–∏–º—É–º 3 –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è success
- 4+ –≤–æ–ø—Ä–æ—Å–∞ = need_simplification
- –ú–∞–∫—Å–∏–º—É–º 4 –¥–æ–∫—É–º–µ–Ω—Ç–∞
- –í–ê–ñ–ù–û: –ë—É–¥—å —Ç–æ–ª–µ—Ä–∞–Ω—Ç–µ–Ω –∫ –≤–æ–ø—Ä–æ—Å–∞–º –æ —à–∫–æ–ª–µ
- –°–∫–µ–ø—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "—ç—Ç–æ –Ω–µ —Å–µ–∫—Ç–∞?") –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–π –∫–∞–∫ success –∏ –≤—ã–±–∏—Ä–∞–π ukido_philosophy.md –∏–ª–∏ safety_and_trust.md

"""
    
    def _get_summaries_section(self) -> str:
        """–°–µ–∫—Ü–∏—è —Å —Å–∞–º–º–∞—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        return f"""=== –ë–ê–ó–ê –ó–ù–ê–ù–ò–ô (–î–û–°–¢–£–ü–ù–´–ï –î–û–ö–£–ú–ï–ù–¢–´) ===
{json.dumps(self.summaries, ensure_ascii=False, indent=2)}

"""
    
    def _get_history_section(self, history: List[Dict[str, str]]) -> str:
        """–°–µ–∫—Ü–∏—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π –¥–∏–∞–ª–æ–≥–∞"""
        if not history:
            return ""
            
        section = "=== –ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê ===\n"
        section += "(–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)\n\n"

        # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
        recent_history = history[-10:] if len(history) > 10 else history
        
        # –ò—â–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π user_signal –≤ –∏—Å—Ç–æ—Ä–∏–∏
        previous_signal = None
        for msg in recent_history:
            content = msg.get("content", "").lower()
            # –ò—â–µ–º –º–∞—Ä–∫–µ—Ä—ã price_sensitive –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
            if msg.get("role") == "user":
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º "—Ä–∞–∑–≤–æ–¥" —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–µ–Ω–µ–≥/—Ü–µ–Ω—ã
                if "—Ä–∞–∑–≤–æ–¥" in content:
                    # –ï—Å–ª–∏ "—Ä–∞–∑–≤–æ–¥" —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è —Å –¥–µ–Ω–µ–∂–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º - —ç—Ç–æ price_sensitive
                    if any(money_word in content for money_word in ["–¥–µ–Ω—å–≥–∏", "—Ü–µ–Ω–∞", "—Å—Ç–æ–∏—Ç", "–æ–ø–ª–∞—Ç–∞", "–ø–ª–∞—Ç–∏—Ç—å", "–≥—Ä–Ω", "–≥—Ä–∏–≤–µ–Ω", "—Ç—ã—Å—è—á"]):
                        previous_signal = "price_sensitive"
                        break
                    # –ò–Ω–∞—á–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º (—ç—Ç–æ –ø—Ä–æ –¥–æ–≤–µ—Ä–∏–µ, –∞ –Ω–µ –ø—Ä–æ —Ü–µ–Ω—É)
                elif any(marker in content for marker in ["–¥–æ—Ä–æ–≥–æ", "30 —Ç—ã—Å—è—á", "–ª–∞–±—É–¥–∞", "–∑–æ–ª–æ—Ç—ã–µ —É—Ä–æ–∫–∏", "—Å —É–º–∞ —Å–æ—à–ª–∏"]):
                    previous_signal = "price_sensitive"
                    break

        for msg in recent_history:
            role = "User" if msg.get("role") == "user" else "Assistant"
            content = msg.get("content", "")
            section += f"{role}: {content}\n"

        section += """
–ò–°–ü–û–õ–¨–ó–£–ô –ò–°–¢–û–†–ò–Æ –î–õ–Ø:
- –ü–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –Ω–µ–ø–æ–ª–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ ("–ê —ç—Ç–æ –ø–ª–∞—Ç–Ω–æ?" ‚Üí –æ —á—ë–º "—ç—Ç–æ"?)
- –î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∫ –æ—Ç–æ—Ä–≤–∞–Ω–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º
- –ü–æ–Ω–∏–º–∞–Ω–∏—è —á—Ç–æ —É–∂–µ –æ–±—Å—É–∂–¥–∞–ª–æ—Å—å
- –£–ª—å—Ç—Ä–∞-–∫—Ä–∞—Ç–∫–∏–µ —Ä–µ–ø–ª–∏–∫–∏ ("–ê?", "–ò?", "–ò –≤—Å—ë?", "–ê –¥–∞–ª—å—à–µ?") - –í–°–ï–ì–î–ê –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞!
"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É–∫–∞–∑–∞–Ω–∏–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–∏–≥–Ω–∞–ª–∞ –µ—Å–ª–∏ –æ–Ω –±—ã–ª price_sensitive —Å –Ω–µ–≥–∞—Ç–∏–≤–æ–º
        if previous_signal == "price_sensitive":
            section += """
–í–ê–ñ–ù–û: –í –∏—Å—Ç–æ—Ä–∏–∏ –±—ã–ª price_sensitive —Å–∏–≥–Ω–∞–ª.
–°–û–•–†–ê–ù–Ø–ô price_sensitive –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –Ω–µ–≥–∞—Ç–∏–≤ –∫ —Ü–µ–Ω–µ.
–ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø—Ä–æ—Å—Ç–æ –≤–æ–ø—Ä–æ—Å –±–µ–∑ –Ω–µ–≥–∞—Ç–∏–≤–∞, –∏—Å–ø–æ–ª—å–∑—É–π exploring_only.
"""
        
        return section
    
    def _get_decomposition_section(self) -> str:
        """–°–µ–∫—Ü–∏—è –¥–ª—è —ç—Ç–∞–ø–∞ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"""
        return """
=== –≠–¢–ê–ü 1: –î–ï–ö–û–ú–ü–û–ó–ò–¶–ò–Ø ===

–ò–∑–≤–ª–µ–∫–∏ –í–°–ï –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –∑–∞–ø—Ä–æ—Å–∞:
1. –Ø–≤–Ω—ã–µ (—Å "?")
2. –°–∫—Ä—ã—Ç—ã–µ ("–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", "—Ö–æ—á—É —É–∑–Ω–∞—Ç—å", "—Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ")
3. –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ ("–ê?", "–ò?", "–î–∞–ª—å—à–µ?" - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏)

–ò–ì–ù–û–†–ò–†–£–ô —Ç–æ–ª—å–∫–æ:
- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è/–ø—Ä–æ—â–∞–Ω–∏—è/–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
- –ú–∞—Ç –∏ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è
- –Ø–≤–Ω—ã–π –æ—Ñ—Ñ—Ç–æ–ø–∏–∫ (–ø–æ–≥–æ–¥–∞, –ø–æ–ª–∏—Ç–∏–∫–∞)

–ü–†–ò–ú–ï–†–´ –î–ï–ö–û–ú–ü–û–ó–ò–¶–ò–ò:

–ó–∞–ø—Ä–æ—Å: "–ü—Ä–∏–≤–µ—Ç! –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –∫—É—Ä—Å –¥–ª—è 10-–ª–µ—Ç–Ω–µ–≥–æ –∏ –µ—Å—Ç—å –ª–∏ —Å–∫–∏–¥–∫–∏?"
‚Üí 1. "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –∫—É—Ä—Å?" 2. "–î–ª—è 10 –ª–µ—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç?" 3. "–ö–∞–∫–∏–µ —Å–∫–∏–¥–∫–∏?"

–í–ê–ñ–ù–û: –û–±—ä–µ–¥–∏–Ω—è–π —Å–≤—è–∑–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã!
–ó–∞–ø—Ä–æ—Å: "–£ –º–µ–Ω—è –¥–≤–æ–µ –¥–µ—Ç–µ–π 8 –∏ 12 –ª–µ—Ç, –º–ª–∞–¥—à–∏–π —Å—Ç–µ—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–π, —Å—Ç–∞—Ä—à–∏–π –≥–∏–ø–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π"
‚Üí "–ö–∞–∫–∏–µ –∫—É—Ä—Å—ã –ø–æ–¥–æ–π–¥—É—Ç –¥–ª—è —Å—Ç–µ—Å–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ 8 –ª–µ—Ç –∏ –≥–∏–ø–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ 12 –ª–µ—Ç?"

–° –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º:
–ò—Å—Ç–æ—Ä–∏—è: –æ–±—Å—É–∂–¥–∞–ª–∏ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫
–ó–∞–ø—Ä–æ—Å: "–ê —ç—Ç–æ –ø–ª–∞—Ç–Ω–æ?"
‚Üí "–ü—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –ø–ª–∞—Ç–Ω—ã–π?"

–û—Ñ—Ñ—Ç–æ–ø–∏–∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º:
"–£ –≤–∞—Å –µ—Å—Ç—å –∫—É—Ä—Å—ã? –ö–∞–∫–∞—è –ø–æ–≥–æ–¥–∞?" ‚Üí —Ç–æ–ª—å–∫–æ ["–ö–∞–∫–∏–µ –∫—É—Ä—Å—ã –µ—Å—Ç—å?"]

4+ –≤–æ–ø—Ä–æ—Å–∞ = need_simplification:
"–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç, –∫—Ç–æ –≤–µ–¥–µ—Ç, —Å–∫–æ–ª—å–∫–æ –¥–µ—Ç–µ–π, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?" ‚Üí 4 –≤–æ–ø—Ä–æ—Å–∞ ‚Üí need_simplification

–°–û–¶–ò–ê–õ–¨–ù–´–ô –ö–û–ù–¢–ï–ö–°–¢ (–æ—Ç–º–µ—á–∞–π, –Ω–æ –Ω–µ –≤–∫–ª—é—á–∞–π –≤ –≤–æ–ø—Ä–æ—Å—ã):
- greeting (–ø—Ä–∏–≤–µ—Ç), thanks (—Å–ø–∞—Å–∏–±–æ), apology (–∏–∑–≤–∏–Ω–∏—Ç–µ), farewell (–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è)
"–ü—Ä–∏–≤–µ—Ç! –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?" ‚Üí social_context: "greeting", –≤–æ–ø—Ä–æ—Å—ã: ["–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?"]

–í–ê–ñ–ù–û: "–î–∞–≤–∞–π—Ç–µ" –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–µ–π—Å—Ç–≤–∏–π –ù–ï —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º:
- "–î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º" - –ù–ï greeting, —ç—Ç–æ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ ‚Üí social_context: null
- "–î–∞–≤–∞–π—Ç–µ –∑–∞–ø–∏—à–µ–º—Å—è" - –ù–ï greeting, —ç—Ç–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∑–∞–ø–∏—Å–∏ ‚Üí social_context: null
- "–ó–≤—É—á–∏—Ç —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ. –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º" - –ù–ï greeting ‚Üí social_context: null
- –¢–æ–ª—å–∫–æ "–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è" –º–æ–∂–µ—Ç –±—ã—Ç—å greeting

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û –¥–ª—è ready_to_buy —Å–∏–≥–Ω–∞–ª–æ–≤:
–ï—Å–ª–∏ —Ñ—Ä–∞–∑–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞—Ä–∫–µ—Ä—ã –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–ï–ó —è–≤–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, –í–°–ï–ì–î–ê –¥–æ–±–∞–≤–ª—è–π implicit –≤–æ–ø—Ä–æ—Å:
- "–°–ø–∞—Å–∏–±–æ, –∑–∞–ø–∏—à–∏—Ç–µ –Ω–∞—Å" ‚Üí ["–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –∫—É—Ä—Å?"]
- "–ú—ã —Å–æ–≥–ª–∞—Å–Ω—ã" ‚Üí ["–ù–∞ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã - –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å –∏–ª–∏ –Ω—É–∂–Ω—ã –¥–µ—Ç–∞–ª–∏?"]
- "–î–µ–π—Å—Ç–≤—É–µ–º" ‚Üí ["–ö–∞–∫–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—å?"]
- "–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –º–µ–Ω—è" ‚Üí ["–ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å?"]
- "–î–∞–≤–∞–π—Ç–µ", "–ò–¥—ë—Ç", "–ü–æ–¥—Ö–æ–¥–∏—Ç" ‚Üí ["–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç - —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å?"]
- "–ë–ª–∞–≥–æ–¥–∞—Ä—é! –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ" ‚Üí ["–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –∫—É—Ä—Å?"]
- "–°–ø–∞—Å–∏–±–æ. –î–µ–π—Å—Ç–≤—É–µ–º." ‚Üí ["–ö–∞–∫–∏–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏?"]

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û –¥–ª—è mixed —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –∏–Ω—Ç–µ–Ω—Ç–æ–≤:
–ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ/–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å + –õ–Æ–ë–ê–Ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ç—è—Ö/–ø—Ä–æ–±–ª–µ–º–∞—Ö/–∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö:
- status: "success" (–ù–ï offtopic!)
- social_context: "greeting"/"thanks" (–æ—Ç–º–µ—á–∞–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç)
- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≥–µ–Ω–µ—Ä–∏—Ä—É–π implicit –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:
  * "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –£ –º–µ–Ω—è —Ç—Ä–æ–µ –¥–µ—Ç–µ–π" ‚Üí ["–ö–∞–∫–∏–µ –∫—É—Ä—Å—ã –ø–æ–¥–æ–π–¥—É—Ç –¥–ª—è —Ç—Ä–æ–∏—Ö –¥–µ—Ç–µ–π?"]
  * "–ü—Ä–∏–≤–µ—Ç! –ú–æ–π —Ä–µ–±–µ–Ω–æ–∫ —Å—Ç–µ—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–π" ‚Üí ["–ö–∞–∫ –ø–æ–º–æ—á—å —Å—Ç–µ—Å–Ω–∏—Ç–µ–ª—å–Ω–æ–º—É —Ä–µ–±–µ–Ω–∫—É?"]
  * "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∫—É—Ä—Å –¥–ª—è 10-–ª–µ—Ç–Ω–µ–≥–æ" ‚Üí ["–ö–∞–∫–æ–π –∫—É—Ä—Å –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è 10-–ª–µ—Ç–Ω–µ–≥–æ?"]
  * "–°–ø–∞—Å–∏–±–æ! –£ –º–µ–Ω—è –¥–≤–æ–µ –¥–µ—Ç–µ–π 7 –∏ 12 –ª–µ—Ç" ‚Üí ["–ö–∞–∫–∏–µ –∫—É—Ä—Å—ã –¥–ª—è –¥–µ—Ç–µ–π 7 –∏ 12 –ª–µ—Ç?"]

–≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

–†–ï–ó–£–õ–¨–¢–ê–¢ –î–ï–ö–û–ú–ü–û–ó–ò–¶–ò–ò:
–°–ø–∏—Å–æ–∫ —á—ë—Ç–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ë–ï–ó —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ + –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ social_context.
–ü–û–ú–ù–ò: –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–æ—Å—å –±–æ–ª—å—à–µ 3 –≤–æ–ø—Ä–æ—Å–æ–≤ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –Ω–∞ —ç—Ç–∞–ø–µ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏! 
–°—Ç–∞—Ç—É—Å need_simplification –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ç–∞–ø–µ.

"""
    
    def _get_classification_section(self) -> str:
        """–°–µ–∫—Ü–∏—è –¥–ª—è —ç—Ç–∞–ø–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
        return """
=== –≠–¢–ê–ü 2: –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–Ø –ò –í–´–ë–û–† –î–û–ö–£–ú–ï–ù–¢–û–í ===

–ó–ê–î–ê–ß–ê: –ù–∞ –æ—Å–Ω–æ–≤–µ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∏ –≤—ã–±—Ä–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã.

–®–ê–ì 1: –ü–û–î–°–ß–Å–¢ –®–ö–û–õ–¨–ù–´–• –í–û–ü–†–û–°–û–í
- –ü–æ—Å—á–∏—Ç–∞–π –¢–û–ß–ù–û–ï –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ (decomposed_questions)
- –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ - —à–∫–æ–ª—å–Ω—ã–µ (–æ—Ñ—Ñ—Ç–æ–ø–∏–∫ —É–∂–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω)
- –í–ê–ñ–ù–û: —Å—á–∏—Ç–∞–π –∏–º–µ–Ω–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤!

–®–ê–ì 2: –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê
- 0 –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Üí offtopic
- 1-3 –≤–æ–ø—Ä–æ—Å–∞ ‚Üí success ‚úÖ
- 4+ –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Üí need_simplification

–°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –ü–†–ê–í–ò–õ–ê –î–õ–Ø –°–û–¶–ò–ê–õ–¨–ù–´–• –ò–ù–¢–ï–ù–¢–û–í:

–ß–ò–°–¢–û —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ (–ë–ï–ó –∫–∞–∫–æ–π-–ª–∏–±–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏) ‚Üí status: "offtopic" + social_context:
- –¢–æ–ª—å–∫–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ("–ü—Ä–∏–≤–µ—Ç", "–î–æ–±—Ä—ã–π –¥–µ–Ω—å") ‚Üí offtopic + social_context: "greeting"
- –¢–æ–ª—å–∫–æ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å ("–°–ø–∞—Å–∏–±–æ", "–ë–ª–∞–≥–æ–¥–∞—Ä—é") ‚Üí offtopic + social_context: "thanks"
- –¢–æ–ª—å–∫–æ –ø—Ä–æ—â–∞–Ω–∏–µ ("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è", "–ü–æ–∫–∞") ‚Üí offtopic + social_context: "farewell"

MIXED —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –õ–Æ–ë–ê–Ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è) ‚Üí status: "success" + social_context:
- "–ü—Ä–∏–≤–µ—Ç! –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?" ‚Üí success + social_context: "greeting"
- "–°–ø–∞—Å–∏–±–æ, –∑–∞–ø–∏—à–∏—Ç–µ –Ω–∞—Å" ‚Üí success + ready_to_buy + social_context: "thanks"
- "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –£ –º–µ–Ω—è —Ç—Ä–æ–µ –¥–µ—Ç–µ–π" ‚Üí success + social_context: "greeting" (implicit –≤–æ–ø—Ä–æ—Å—ã!)
- "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–µ–±–µ–Ω–æ–∫ —Å—Ç–µ—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–π" ‚Üí success + social_context: "greeting" (implicit –≤–æ–ø—Ä–æ—Å—ã!)

–ü–û–ú–ù–ò: –ï—Å–ª–∏ –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –µ—Å—Ç—å –õ–Æ–ë–ê–Ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ç—è—Ö/–ø—Ä–æ–±–ª–µ–º–∞—Ö - —ç—Ç–æ success —Å implicit –≤–æ–ø—Ä–æ—Å–∞–º–∏!

–ü–†–ê–í–ò–õ–û: –ó–ê–ü–ò–°–¨/–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø/–°–û–ì–õ–ê–°–ò–ï/–î–ï–ô–°–¢–í–ò–ï –ø–æ—Å–ª–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ = ready_to_buy!
–°–ª–æ–≤–∞-–º–∞—Ä–∫–µ—Ä—ã ready_to_buy: –∑–∞–ø–∏—à–∏—Ç–µ, –∑–∞–ø–∏—Å—å, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —Å–æ–≥–ª–∞—Å–Ω—ã, –¥–µ–π—Å—Ç–≤—É–µ–º, –∏–¥—ë—Ç, –ø–æ–¥—Ö–æ–¥–∏—Ç, –¥–∞–≤–∞–π—Ç–µ

–í–ê–ñ–ù–û: –ü—Ä–∏ —Å–æ–º–Ω–µ–Ω–∏—è—Ö –º–µ–∂–¥—É offtopic –∏ success - –≤—ã–±–∏—Ä–∞–π success!

–®–ê–ì 3: –í–´–ë–û–† –î–û–ö–£–ú–ï–ù–¢–û–í (—Ç–æ–ª—å–∫–æ –¥–ª—è status: "success")
–¶–ï–õ–¨: –ø–æ–∫—Ä—ã—Ç—å –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–∏ –ª–∏–º–∏—Ç–µ –º–∞–∫—Å–∏–º—É–º 4 –¥–æ–∫—É–º–µ–Ω—Ç–∞.

üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - –ó–ê–©–ò–¢–ê –û–¢ –ì–ê–õ–õ–Æ–¶–ò–ù–ê–¶–ò–ô:
–ï—Å–ª–∏ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ –ù–ï–¢ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π ‚Üí status: "offtopic"!
–ù–ï –í–´–î–£–ú–´–í–ê–ô –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! –ï—Å–ª–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ:
- –ü–∞—Ä–∫–æ–≤–∫–µ, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ, –∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è
- –§—É—Ç–±–æ–ª–µ, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–µ–∫—Ü–∏—è—Ö (—Ç–æ–ª—å–∫–æ soft skills)
- –û–Ω–ª–∞–π–Ω-—Ñ–æ—Ä–º–∞—Ç–µ (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö)
- –ü–∏—Ç–∞–Ω–∏–∏, —Å—Ç–æ–ª–æ–≤–æ–π, –∫–∞—Ñ–µ
‚Üí –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–æ–∑–≤—Ä–∞—â–∞–π status: "offtopic"

–ê–õ–ì–û–†–ò–¢–ú –í–´–ë–û–†–ê:
1) –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –≤—ã–±–µ—Ä–∏ 1-2 –¥–æ–∫—É–º–µ–Ω—Ç–∞:
   - 1 –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç (primary) - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π
   - 1 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π (support) - –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
   - –ï—Å–ª–∏ –ù–ï–¢ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ‚Üí status: "offtopic"
2) –ü–æ—Å–ª–µ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:
   - 1 –≤–æ–ø—Ä–æ—Å ‚Üí 1-2 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞
   - 2 –≤–æ–ø—Ä–æ—Å–∞ ‚Üí 2-4 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞  
   - 3 –≤–æ–ø—Ä–æ—Å–∞ ‚Üí 3-4 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞
3) –ò—Å–ø–æ–ª—å–∑—É–π –∏–∑ —Å–∞–º–º–∞—Ä–∏:
   - trigger_words (–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞)
   - typical_questions (—Ç–∏–ø–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã)
   - core_topics (–æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã)
   - related_docs (—Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã)

–ü–†–ê–í–ò–õ–ê –í–´–ë–û–†–ê –î–û–ö–£–ú–ï–ù–¢–û–í:
- "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?" ‚Üí pricing.md
- "–ö—Ç–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏?" ‚Üí teachers_team.md  
- "–ö–∞–∫–∏–µ –∫—É—Ä—Å—ã?" ‚Üí courses_detailed.md
- "–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥—è—Ç –∑–∞–Ω—è—Ç–∏—è?" ‚Üí methodology.md
- "–ï—Å—Ç—å –ª–∏ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫?" ‚Üí faq.md
- "–ö–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?" ‚Üí conditions.md
- "–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?" ‚Üí faq.md
- "–ß—Ç–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç–µ?" ‚Üí ukido_philosophy.md + methodology.md

–û–ü–ï–†–ê–¶–ò–û–ù–ù–´–ï –†–ï–ü–õ–ò–ö–ò (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è):
- –ó–∞–ø–∏—Å—å, –∫–æ–Ω—Ç–∞–∫—Ç—ã, —É—Å–ª–æ–≤–∏—è ‚Üí faq.md, conditions.md
- –î–æ–∫—É–º–µ–Ω—Ç—ã —à–∫–æ–ª—ã (–ª–∏—Ü–µ–Ω–∑–∏—è, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã) ‚Üí safety_and_trust.md

–û–ë–™–ï–î–ò–ù–ï–ù–ò–ï –î–û–ö–£–ú–ï–ù–¢–û–í:
- –£–±–µ—Ä–∏ –¥—É–±–ª–∏–∫–∞—Ç—ã (–µ—Å–ª–∏ –¥–ª—è –¥–≤—É—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω—É–∂–µ–Ω –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç)
- –ú–∞–∫—Å–∏–º—É–º 4 –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞ –≤–µ—Å—å –æ—Ç–≤–µ—Ç
- –ü–µ—Ä–≤—ã–µ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É - –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
- –ï—Å–ª–∏ –ù–ï–¢ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ‚Üí –ù–ï –≤–∫–ª—é—á–∞–π –Ω–∏–∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –≤–µ—Ä–Ω–∏ status: "offtopic"

–®–ê–ì 4: –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –°–ò–ì–ù–ê–õ–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ –û–î–ò–ù –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏–≥–Ω–∞–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

–°–ò–ì–ù–ê–õ–´:
- "price_sensitive" - –°–ö–ï–ü–¢–ò–ß–ï–°–ö–ò–ï –∏–ª–∏ –ù–ï–ì–ê–¢–ò–í–ù–´–ï –≤–æ–ø—Ä–æ—Å—ã –æ —Ü–µ–Ω–µ ("–¥–æ—Ä–æ–≥–æ", "–ø–æ—á–µ–º—É —Ç–∞–∫ –º–Ω–æ–≥–æ"), —Ç–æ—Ä–≥, —Å–æ–º–Ω–µ–Ω–∏—è –≤ —Ü–µ–Ω–Ω–æ—Å—Ç–∏
- "anxiety_about_child" - –Ø–í–ù–ê–Ø –¢–†–ï–í–û–ì–ê —Ä–æ–¥–∏—Ç–µ–ª—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Ä–µ–±–µ–Ω–∫–∞ (–ø–ª–∞—á, –∏—Å—Ç–µ—Ä–∏–∫–∏, —Ç—Ä–∞–≤–ª—è, –æ—Ç–≤–µ—Ä–∂–µ–Ω–∏–µ)
- "ready_to_buy" - –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∑–∞–ø–∏—Å–∏: —è–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∑–∞–ø–∏—Å—å –ò–õ–ò –∫—Ä–∞—Ç–∫–∏–µ –¥–µ–ª–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ª–æ–≥–∏—Å—Ç–∏–∫–µ
- "exploring_only" - –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ —à–∫–æ–ª–µ, –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏, –∫—É—Ä—Å–∞—Ö –ë–ï–ó —Ç—Ä–µ–≤–æ–≥–∏ –∏ –ë–ï–ó –Ω–µ–≥–∞—Ç–∏–≤–∞ –∫ —Ü–µ–Ω–µ

–í–ê–ñ–ù–û: –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ç–æ–Ω —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –¥–µ–Ω–µ–≥ ("—Ä–∞–∑–≤–æ–¥ –Ω–∞ –¥–µ–Ω—å–≥–∏", "–ª–∞–±—É–¥–∞", "–±–∞–±–ª–æ —Ç—è–Ω–µ—Ç–µ") = price_sensitive
–ù–û: "–≠—Ç–æ –Ω–µ —Ä–∞–∑–≤–æ–¥?" –±–µ–∑ –¥–µ–Ω–µ–∂–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ = –≤–æ–ø—Ä–æ—Å –æ –¥–æ–≤–µ—Ä–∏–∏/–ª–µ–≥–∏—Ç–∏–º–Ω–æ—Å—Ç–∏, –ù–ï price_sensitive

–ü–†–ê–í–ò–õ–ê –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø:
1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –í–°–ï –¥–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏
2. –í–ê–ñ–ù–û: –£—á–∏—Ç—ã–≤–∞–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è - –∫—Ä–∞—Ç–∫–∏–π —Ç–µ–ª–µ–≥—Ä–∞—Ñ–Ω—ã–π —Å—Ç–∏–ª—å (< 5 —Å–ª–æ–≤) —á–∞—Å—Ç–æ = ready_to_buy
3. –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ—Å—å–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å ("–Ω–µ —Ä–∞—Å—Å–ª—ã—à–∞–ª–∞", "–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ", "–µ—â–µ —Ä–∞–∑") –°–û–•–†–ê–ù–Ø–Æ–¢ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–∏–≥–Ω–∞–ª
4. –ò–ù–ï–†–¶–ò–Ø price_sensitive (–û–ì–†–ê–ù–ò–ß–ï–ù–ù–ê–Ø!): 
   - –°–æ—Ö—Ä–∞–Ω—è–π price_sensitive –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –±—ã–ª –Ø–í–ù–´–ô –ù–ï–ì–ê–¢–ò–í ("–¥–æ—Ä–æ–≥–æ!", "–≥—Ä–∞–±–µ–∂", "30 —Ç—ã—Å—è—á?!")
   - –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–π –∏–Ω–µ—Ä—Ü–∏—é –¥–ª—è –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Å–∫–∏–¥–∫–∞—Ö/—Ä–∞—Å—Å—Ä–æ—á–∫–µ
   - –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–±—Ä–∞—Å—ã–≤–∞–π price_sensitive –ø—Ä–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö —Ñ—Ä–∞–∑–∞—Ö:
     * "–ø–æ–¥—Ö–æ–¥–∏—Ç", "–∫–∞—á–µ—Å—Ç–≤–æ –≤–∞–∂–Ω–µ–µ", "–∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ"
     * "–ª–∞–¥–Ω–æ, —á–µ—Ä—Ç —Å –Ω–∏–º–∏ —Å –¥–µ–Ω—å–≥–∞–º–∏", "–¥–µ–Ω—å–≥–∏ –Ω–∞–π–¥–µ–º"
     * "—Ö–æ—Ä–æ—à–æ, —Å–æ–≥–ª–∞—Å–Ω—ã", "–¥–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º"
5. –ü–ï–†–ï–•–û–î–´ –°–ò–ì–ù–ê–õ–û–í:
   - exploring_only ‚Üí ready_to_buy: –ø—Ä–∏ —Å–ª–æ–≤–∞—Ö "–∑–∞–ø–∏—Å–∞—Ç—å", "trial", "book us", "–ø—Ä–æ–±–Ω–æ–µ"
   - price_sensitive ‚Üí ready_to_buy: –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–º –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ü–µ–Ω—ã
   - price_sensitive ‚Üí exploring_only: –∫–æ–≥–¥–∞ –Ω–µ–≥–∞—Ç–∏–≤ —É—à–µ–ª, –æ—Å—Ç–∞–ª–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
   - price_sensitive ‚Üí price_sensitive: –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è —è–≤–Ω—ã–π –Ω–µ–≥–∞—Ç–∏–≤
   - –ú–Ω–æ–≥–æ–¥–µ—Ç–Ω—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏: –≤–æ–ø—Ä–æ—Å—ã –æ —Å–∫–∏–¥–∫–∞—Ö = exploring_only (–ù–ï price_sensitive!)
6. –í—ã–±–∏—Ä–∞–π –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Å–∏–≥–Ω–∞–ª –ø–æ –ø–æ—Ä—è–¥–∫—É: ready_to_buy > anxiety_about_child > price_sensitive > exploring_only
7. –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å - –∏—Å–ø–æ–ª—å–∑—É–π "exploring_only"

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û –î–õ–Ø OFFTOPIC:
–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ offtopic (–Ω–µ –æ —à–∫–æ–ª–µ), –í–°–ï–ì–î–ê –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –∏ –°–û–•–†–ê–ù–Ø–ô –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π user_signal!
- –ï—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –±—ã–ª anxiety_about_child ‚Üí —Å–æ—Ö—Ä–∞–Ω–∏ anxiety_about_child –¥–ª—è offtopic
- –ï—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –±—ã–ª price_sensitive ‚Üí —Å–æ—Ö—Ä–∞–Ω–∏ price_sensitive –¥–ª—è offtopic  
- –ï—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –±—ã–ª ready_to_buy ‚Üí —Å–æ—Ö—Ä–∞–Ω–∏ ready_to_buy –¥–ª—è offtopic
- –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç –∏–ª–∏ –±—ã–ª exploring_only ‚Üí –∏—Å–ø–æ–ª—å–∑—É–π exploring_only –¥–ª—è offtopic

–ú–ê–†–ö–ï–†–´ price_sensitive (–¢–û–õ–¨–ö–û –Ø–í–ù–´–ô –ù–ï–ì–ê–¢–ò–í –ö –¶–ï–ù–ï!):
- –Ø–í–ù–´–ô –Ω–µ–≥–∞—Ç–∏–≤: "–¥–æ—Ä–æ–≥–æ", "–¥–æ—Ä–æ–≥–æ–≤–∞-—Ç–æ", "—Å —É–º–∞ —Å–æ—à–ª–∏", "30 —Ç—ã—Å—è—á?!", "–ø–æ—á–µ–º—É —Ç–∞–∫ –º–Ω–æ–≥–æ", "–∑–æ–ª–æ—Ç—ã–µ —É—Ä–æ–∫–∏", "–≥—Ä–∞–±–µ–∂", "–Ω–µ–∞–¥–µ–∫–≤–∞—Ç–Ω–∞—è —Ü–µ–Ω–∞"
- –¢–æ—Ä–≥ –∏ —Å–∫–µ–ø—Ç–∏—Ü–∏–∑–º: "–∞ –¥–µ—à–µ–≤–ª–µ?", "–∑–∞ —á—Ç–æ —Ç–∞–∫–∏–µ –¥–µ–Ω—å–≥–∏", "–æ–Ω–æ —Ç–æ–≥–æ —Å—Ç–æ–∏—Ç?"
- –ü–æ–¥–æ–∑—Ä–µ–Ω–∏—è –° –¥–µ–Ω—å–≥–∞–º–∏: "—Ä–∞–∑–≤–æ–¥ –Ω–∞ –¥–µ–Ω—å–≥–∏", "–±–∞–±–ª–æ —Ç—è–Ω–µ—Ç–µ", "–Ω–∞–∂–∏–≤–∞–µ—Ç–µ—Å—å –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—è—Ö"
- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–µ–≥–∞—Ç–∏–≤–æ–º: "—É –¥—Ä—É–≥–∏—Ö –¥–µ—à–µ–≤–ª–µ", "–≤–µ–∑–¥–µ –¥–µ—à–µ–≤–ª–µ", "–∑–∞–≤—ã—à–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞"

–ö–†–ò–¢–ò–ß–ù–û - –ù–ï price_sensitive (—ç—Ç–æ exploring_only):
- –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã: "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?", "–ö–∞–∫–∞—è —Ü–µ–Ω–∞?", "–¶–µ–Ω–∞?"
- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã: "–ö–∞–∫–∏–µ —Å–∫–∏–¥–∫–∏?", "–ï—Å—Ç—å –ª–∏ —Å–∫–∏–¥–∫–∏?", "–°–∫–∏–¥–∫–∞ –¥–ª—è —Ç—Ä–æ–∏—Ö?"
- –£—Ç–æ—á–Ω–µ–Ω–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ: "–ï—Å—Ç—å —Ä–∞—Å—Å—Ä–æ—á–∫–∞?", "–ú–æ–∂–Ω–æ —á–∞—Å—Ç—è–º–∏?", "–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å?"
- –ü—Ä–æ—Å—Ç—ã–µ —Ä–∞—Å—á–µ—Ç—ã: "–ï—Å–ª–∏ 15% –Ω–∞ –∫–∞–∂–¥–æ–≥–æ - –ø–æ–ª—É—á–∞–µ—Ç—Å—è X?"
- –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: "–¶–µ–Ω–∞ –Ω–µ –≤–∞–∂–Ω–∞", "–î–µ–Ω—å–≥–∏ –Ω–∞–π–¥–µ–º", "–ö–∞—á–µ—Å—Ç–≤–æ –≤–∞–∂–Ω–µ–µ –¥–µ–Ω–µ–≥"

–ú–ê–†–ö–ï–†–´ ready_to_buy:
- –Ø–≤–Ω—ã–µ: "—Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å", "–∑–∞–ø–∏—à–∏—Ç–µ –Ω–∞—Å", "–∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è", "–≥–¥–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è", "book us"
- –° —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ (–ö–†–ò–¢–ò–ß–ù–û!):
  * "–°–ø–∞—Å–∏–±–æ, –∑–∞–ø–∏—à–∏—Ç–µ –Ω–∞—Å" - –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å + –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
  * "–ë–ª–∞–≥–æ–¥–∞—Ä—é! –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –º–µ–Ω—è" - –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å + –¥–µ–π—Å—Ç–≤–∏–µ
  * "–°–ø–∞—Å–∏–±–æ. –ú—ã —Å–æ–≥–ª–∞—Å–Ω—ã." - –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å + —Å–æ–≥–ª–∞—Å–∏–µ
  * "–°–ø–∞—Å–∏–±–æ. –î–µ–π—Å—Ç–≤—É–µ–º." - –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å + —Ä–µ—à–µ–Ω–∏–µ
- –°–ª–æ–≤–∞ —Å–æ–≥–ª–∞—Å–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è: "—Å–æ–≥–ª–∞—Å–Ω—ã", "–¥–µ–π—Å—Ç–≤—É–µ–º", "–∏–¥—ë—Ç", "–ø–æ–¥—Ö–æ–¥–∏—Ç", "–¥–∞–≤–∞–π—Ç–µ", "—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ"
- –ö–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã–µ –∫—Ä–∞—Ç–∫–∏–µ (—Ç–µ–ª–µ–≥—Ä–∞—Ñ–Ω—ã–π —Å—Ç–∏–ª—å):
  * "–ö—É—Ä—Å [–Ω–∞–∑–≤–∞–Ω–∏–µ]. –ö–æ–≥–¥–∞ —Å—Ç–∞—Ä—Ç?" - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
  * "–û–Ω–ª–∞–π–Ω –µ—Å—Ç—å?" - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞  
  * "–¶–µ–Ω–∞? –°—Ä–æ–∫–∏?" - —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ —Ä–µ—à–µ–Ω–∏–µ–º
  * "–û–ø–ª–∞—Ç–∞?", "–°—Å—ã–ª–∫—É", "–î–æ–∫—É–º–µ–Ω—Ç—ã?" - –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø–∏—Å–∏
  * "Trial –µ—Å—Ç—å?" - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ª–µ–Ω–≥ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
- –ü–∞—Ç—Ç–µ—Ä–Ω: —Ñ–æ–∫—É—Å –Ω–∞ –ü–†–û–¶–ï–°–°–ï –∏ –õ–û–ì–ò–°–¢–ò–ö–ï, –∞ –Ω–µ –Ω–∞ —Å—É—Ç–∏ –∫—É—Ä—Å–æ–≤

–ú–ê–†–ö–ï–†–´ anxiety_about_child (–¢–û–õ–¨–ö–û –Ø–í–ù–ê–Ø –¢–†–ï–í–û–ì–ê!):
- –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ø—Ä–æ–±–ª–µ–º—ã: "–Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è", "–¥–µ—Ä–µ—Ç—Å—è", "–∏—Å—Ç–µ—Ä–∏–∫–∏", "–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π", "–æ—Ç–±–∏–ª—Å—è –æ—Ç —Ä—É–∫"
- –¢—Ä–∞–≤–ª—è –∏ –±—É–ª–ª–∏–Ω–≥: "—Ç—Ä–∞–≤—è—Ç", "–±—É–ª–ª–∏–Ω–≥", "–æ–±–∏–∂–∞—é—Ç", "–∏–∑–¥–µ–≤–∞—é—Ç—Å—è", "–±—å—é—Ç", "—É–Ω–∏–∂–∞—é—Ç", "–∏–∑–≥–æ–π"
- –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫—Ä–∏–∑–∏—Å: "–ø–ª–∞—á–µ—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å", "–Ω–µ —Ö–æ—á–µ—Ç –∂–∏—Ç—å", "–¥–µ–ø—Ä–µ—Å—Å–∏—è", "–ø–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏"
- –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –ø–∞–Ω–∏–∫–∞: "–ü–û–ú–û–ì–ò–¢–ï!", "—á—Ç–æ –¥–µ–ª–∞—Ç—å???", "–Ω–µ –∑–Ω–∞—é –∫–∞–∫ –ø–æ–º–æ—á—å", "—Å–æ–≤—Å–µ–º –æ—Ç—á–∞—è–ª–∞—Å—å"
- –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏ + –ø—Ä–æ–±–ª–µ–º–∞: "–°—ã–Ω –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è!!!", "–ü–æ–º–æ–≥–∏—Ç–µ!!!"
–í–ê–ñ–ù–û: –ü—Ä–æ—Å—Ç–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ "—Å—Ç–µ—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–π", "—Ç–∏—Ö–∏–π", "–∑–∞—Å—Ç–µ–Ω—á–∏–≤—ã–π" –ë–ï–ó —Ç—Ä–µ–≤–æ–≥–∏ = exploring_only!
–í–ê–ñ–ù–û: "–£ –º–µ–Ω—è –≤–Ω—É—á–∫–∞ —Å—Ç–µ—Å–Ω–∏—Ç–µ–ª—å–Ω–∞—è" - —ç—Ç–æ –û–ü–ò–°–ê–ù–ò–ï —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, –ù–ï —Ç—Ä–µ–≤–æ–≥–∞ = exploring_only!

–ü–†–ê–í–ò–õ–û IMPLICIT QUESTIONS: ready_to_buy –ë–ï–ó –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Üí –¥–æ–±–∞–≤—å —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å!

–ú–ê–†–ö–ï–†–´ exploring_only (—É–∫—Ä–∞–∏–Ω—Å–∫–∏–µ —Ä–æ–¥–∏—Ç–µ–ª–∏-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏):
- –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã: "—Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ", "—á—Ç–æ —ç—Ç–æ –∑–∞ —à–∫–æ–ª–∞", "—á–µ–º –∏–º–µ–Ω–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å"
- –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è: "–∫–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏", "–∫–∞–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", "—á—Ç–æ –¥–∞–µ—Ç —Ä–µ–±–µ–Ω–∫—É", "–∫–∞–∫–∞—è –º–µ—Ç–æ–¥–∏–∫–∞"
- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ: "—á–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç–µ—Å—å", "–ø–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –≤—ã", "–∫–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥", "—á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ"
- –ü–∞—Å—Å–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å: "–ø—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å", "–Ω–∞ –±—É–¥—É—â–µ–µ", "–º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ—Ç–æ–º", "—Ö–æ—á—É —É–∑–Ω–∞—Ç—å"
- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: "–ø—Ä–∏—à–ª–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", "–≥–¥–µ –ø–æ—á–∏—Ç–∞—Ç—å", "–µ—Å—Ç—å –ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"
- –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ä—ã: "–ø–æ–∫–∞ –¥—É–º–∞–µ–º", "–µ—â–µ –Ω–µ —Ä–µ—à–∏–ª–∏", "—Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã"
–í–ê–ñ–ù–û: –û—Ç–ª–∏—á–∏–µ –æ—Ç price_sensitive - –Ω–µ—Ç —Ñ–æ–∫—É—Å–∞ –Ω–∞ —Ü–µ–Ω–µ, —Å–∫–∏–¥–∫–∞—Ö –∏–ª–∏ –Ω–µ–¥–æ–≤–µ—Ä–∏—è
–í–ê–ñ–ù–û: –û—Ç–ª–∏—á–∏–µ –æ—Ç ready_to_buy - –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ª–æ–≥–∏—Å—Ç–∏–∫–µ, –∑–∞–ø–∏—Å–∏ –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞—Ç–∞—Ö
- –ë–ï–ó —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ü–µ–Ω—ã, –ø—Ä–æ–±–ª–µ–º —Ä–µ–±–µ–Ω–∫–∞ –∏–ª–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è

–°–¢–ò–õ–¨ –ö–ê–ö –ò–ù–î–ò–ö–ê–¢–û–†:
- –¢–µ–ª–µ–≥—Ä–∞—Ñ–Ω—ã–π —Å—Ç–∏–ª—å (1-3 —Å–ª–æ–≤–∞) + –ª–æ–≥–∏—Å—Ç–∏–∫–∞ = ready_to_buy —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 80%
- –†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏ = exploring_only –∏–ª–∏ anxiety_about_child
- –ü—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Ü–µ–Ω–µ –ë–ï–ó –Ω–µ–≥–∞—Ç–∏–≤–∞ = exploring_only
- –í–æ–ø—Ä–æ—Å—ã –æ —Ü–µ–Ω–µ –° –Ω–µ–≥–∞—Ç–∏–≤–æ–º ("–¥–æ—Ä–æ–≥–æ", "–ø–æ—á–µ–º—É —Ç–∞–∫ –º–Ω–æ–≥–æ") = price_sensitive

"""
    
    def _get_response_format_section(self) -> str:
        """–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON-–æ—Ç–≤–µ—Ç–∞"""
        return (
            "=== –§–û–†–ú–ê–¢ JSON –û–¢–í–ï–¢–ê (–ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô) ===\n\n"
            "1) success:\n{\n  \"status\": \"success\",\n  \"documents\": [\"doc1.md\", ...],\n  \"decomposed_questions\": [\"–í–æ–ø—Ä–æ—Å 1?\", ...],\n  \"user_signal\": \"price_sensitive\",  // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –æ–¥–∏–Ω –∏–∑ 4 —Å–∏–≥–Ω–∞–ª–æ–≤\n  \"social_context\": \"greeting\"  // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –±—ã–ª —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç\n}\n\n"
            "2) offtopic:\n{\n  \"status\": \"offtopic\",\n  \"decomposed_questions\": [],\n  \"user_signal\": \"anxiety_about_child\",  // –°–û–•–†–ê–ù–Ø–ô —Å–∏–≥–Ω–∞–ª –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏! –ù–ï –≤—Å–µ–≥–¥–∞ exploring_only!\n  \"social_context\": \"farewell\"  // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ\n}\n"
            "–í–ê–ñ–ù–û: –¥–ª—è offtopic –ù–ï –≥–µ–Ω–µ—Ä–∏—Ä—É–π message - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—Ä–∞–∑–∞\n\n"
            "3) need_simplification:\n{\n  \"status\": \"need_simplification\",\n  \"message\": \"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–≤–∞–π—Ç–µ –Ω–µ –±–æ–ª–µ–µ —Ç—Ä—ë—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∑–∞ —Ä–∞–∑. –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞—á–Ω–∏—Ç–µ —Å —Å–∞–º–æ–≥–æ –≤–∞–∂–Ω–æ–≥–æ –¥–ª—è –≤–∞—Å.\",\n  \"decomposed_questions\": [\"–í–æ–ø—Ä–æ—Å 1?\", ...],\n  \"user_signal\": \"exploring_only\",  // –æ–ø—Ä–µ–¥–µ–ª–∏ —Å–∏–≥–Ω–∞–ª –¥–∞–∂–µ –¥–ª—è need_simplification\n  \"social_context\": \"apology\"  // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ\n}\n\n"
            "–¢–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–π JSON, –±–µ–∑ markdown –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤. –ü–æ–ª–µ decomposed_questions –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç.\n"
            "–ü–æ–ª–µ user_signal –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û (price_sensitive|anxiety_about_child|ready_to_buy|exploring_only).\n"
            "–ü–æ–ª–µ social_context –¥–æ–±–∞–≤–ª—è–π –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –±—ã–ª —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (greeting/thanks/apology/farewell).\n"
        )
    
    def _fallback_response(self) -> dict:
        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –ª—é–±—ã—Ö –æ—à–∏–±–∫–∞—Ö"""
        return {
            "status": "offtopic",
            "message": DEFAULT_FALLBACK,
            "decomposed_questions": [],
            "user_signal": "exploring_only"
        }