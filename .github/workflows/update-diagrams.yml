name: 📊 Update Architecture Diagrams

on:
  push:
    branches: [main]
    paths:
      - 'src/**/*.py'
      - '.github/workflows/update-diagrams.yml'
  workflow_dispatch:  # Позволяет запускать вручную

jobs:
  generate-diagrams:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Нужно для push обратно в репозиторий
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: 📦 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz
      
      - name: 📚 Install project dependencies
        run: |
          pip install --upgrade pip
          # Сначала устанавливаем зависимости проекта
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
        env:
          # Заглушки для API ключей (не используются при генерации диаграмм)
          OPENROUTER_API_KEY: "dummy_key_for_diagram_generation"
          GOOGLE_API_KEY: "dummy_key_for_diagram_generation"
          
      - name: 📊 Install diagram generation tools
        run: |
          # Затем устанавливаем инструменты для генерации диаграмм
          pip install pydeps
          pip install code2flow
          pip install pylint  # pyreverse входит в состав pylint
      
      - name: 🗂️ Create diagrams directory
        run: mkdir -p docs/diagrams
      
      - name: 🔍 Generate dependency graph with pydeps
        run: |
          echo "Generating dependency graph..."
          echo "Python version: $(python --version)"
          echo "Installed packages:"
          pip list
          echo "---"
          pydeps src \
            --max-bacon=2 \
            --cluster \
            --noshow \
            -o docs/diagrams/dependencies.svg 2>&1 || echo "⚠️ pydeps failed (this is normal for some projects), continuing..."
      
      - name: 🔄 Generate call flow with code2flow
        run: |
          echo "Generating call flow diagram..."
          code2flow src/ \
            --output docs/diagrams/call_flow.png \
            --no-trimming \
            --hide-legend 2>&1 || echo "⚠️ code2flow failed (this is normal for async code), continuing..."
      
      - name: 📐 Generate UML with pyreverse
        run: |
          echo "Generating UML class diagram..."
          python -m pylint.pyreverse -o png -p Ukido src/*.py \
            -d docs/diagrams/ 2>&1 || echo "⚠️ pyreverse failed (this is normal for some code styles), continuing..."
      
      - name: 📝 Generate simple architecture overview
        run: |
          cat > docs/diagrams/architecture_overview.md << 'EOF'
          # 🏗️ Ukido Architecture Diagrams
          
          Auto-generated on: $(date)
          
          ## 📊 Available Diagrams:
          
          ### 1. Dependencies Graph
          ![Dependencies](./dependencies.svg)
          
          ### 2. Call Flow
          ![Call Flow](./call_flow.png)
          
          ### 3. UML Classes
          ![Classes](./classes_Ukido.png)
          
          ## 🔄 Update Schedule
          These diagrams are automatically updated when:
          - Python files in `src/` are modified
          - This workflow file is updated
          - Manually triggered from Actions tab
          
          ## 📦 Project Structure
          - **Router**: Gemini-based intent classification
          - **Generator**: Claude-based response generation
          - **History**: Context management (last 10 messages)
          - **Social**: Social intent handling
          EOF
          date >> docs/diagrams/architecture_overview.md
      
      - name: 📊 Check what was generated
        run: |
          echo "Generated files:"
          ls -la docs/diagrams/
      
      - name: 💾 Commit and push diagrams
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs/diagrams/
          git diff --quiet && git diff --staged --quiet || (
            git commit -m "🤖 Update architecture diagrams [skip ci]
            
            Auto-generated diagrams:
            - Dependency graph (pydeps)
            - Call flow (code2flow)
            - UML classes (pyreverse)
            
            Triggered by: ${{ github.event_name }}
            Commit: ${{ github.sha }}"
            git push
          )