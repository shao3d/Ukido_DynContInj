#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ Router - –ø–æ—á–µ–º—É "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π —à–∫–æ–ª–µ" –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–∞–∫ offtopic
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def test_message(message, user_id="test_debug"):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç"""
    print(f"\n{'='*60}")
    print(f"üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º: {message}")
    print('='*60)
    
    # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
    requests.post(f"{BASE_URL}/clear_history", json={"user_id": user_id})
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    response = requests.post(
        f"{BASE_URL}/chat",
        json={
            "user_id": user_id,
            "message": message
        },
        timeout=30
    )
    
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –û—Ç–≤–µ—Ç: {data.get('response', 'No response')[:200]}...")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å
        if 'metadata' in data:
            meta = data['metadata']
            print(f"\nüìä –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:")
            print(f"  - Intent: {meta.get('intent', 'N/A')}")
            print(f"  - Signal: {meta.get('user_signal', 'N/A')}")
            print(f"  - Questions: {meta.get('decomposed_questions', [])}")
            print(f"  - Documents: {[doc['title'] for doc in meta.get('documents', [])]}")
            print(f"  - Social: {meta.get('social_context', 'N/A')}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        print(response.text)

if __name__ == "__main__":
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —à–∫–æ–ª–µ\n")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    test_cases = [
        "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π —à–∫–æ–ª–µ",
        "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π —à–∫–æ–ª–µ",
        "–ß—Ç–æ –∑–∞ —à–∫–æ–ª–∞ —É –≤–∞—Å?",
        "–ß–µ–º –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å?",
        "–ö–∞–∫–∏–µ –∫—É—Ä—Å—ã –µ—Å—Ç—å?",
        "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø—Ä–æ –≤–∞—à—É –º–µ—Ç–æ–¥–∏–∫—É",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É —É–∑–Ω–∞—Ç—å –æ –≤–∞—à–µ–π —à–∫–æ–ª–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ"
    ]
    
    for message in test_cases:
        test_message(message)
        
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")