#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è HTTP –ø–µ—Å–æ—á–Ω–∏—Ü–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤
–î–µ–ª–∞–µ—Ç –æ–¥–Ω—É –≤–µ—â—å —Ö–æ—Ä–æ—à–æ: –ø—Ä–æ–≥–æ–Ω—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∏–∞–ª–æ–≥–∏
"""

import json
import time
import sys
import os
from datetime import datetime
import requests

def load_dialogue(dialogue_id):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –∏–∑ test_humor_dialogues.json"""
    try:
        with open('test_humor_dialogues.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
            scenarios = data.get('scenarios', [])
            
            for scenario in scenarios:
                if scenario['id'] == dialogue_id:
                    return scenario
            
            print(f"‚ùå –î–∏–∞–ª–æ–≥ '{dialogue_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏: {[s['id'] for s in scenarios]}")
            return None
            
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª test_humor_dialogues.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return None

def run_dialogue(dialogue_id, server_url="http://localhost:8000"):
    """–ü—Ä–æ–≥–æ–Ω—è–µ—Ç –æ–¥–∏–Ω –¥–∏–∞–ª–æ–≥ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∏–∞–ª–æ–≥
    dialogue = load_dialogue(dialogue_id)
    if not dialogue:
        return
    
    print(f"\n{'='*60}")
    print(f"üìù –¢–µ—Å—Ç: {dialogue['name']}")
    print(f"üìã –û–ø–∏—Å–∞–Ω–∏–µ: {dialogue['description']}")
    print(f"{'='*60}\n")
    
    # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∞
    user_id = f"test_{dialogue_id}_{int(time.time())}"
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    results = {
        "dialogue_id": dialogue_id,
        "dialogue_name": dialogue['name'],
        "description": dialogue['description'],
        "timestamp": datetime.now().isoformat(),
        "messages": []
    }
    
    # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º
    try:
        requests.post(f"{server_url}/clear_history/{user_id}", timeout=2)
        print("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞\n")
    except:
        pass  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    
    # –ü—Ä–æ–≥–æ–Ω—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    for i, message in enumerate(dialogue['messages'], 1):
        print(f"[{i}/{len(dialogue['messages'])}] USER: {message}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        try:
            response = requests.post(
                f"{server_url}/chat",
                json={"user_id": user_id, "message": message},
                timeout=15  # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
            )
            
            if response.status_code == 200:
                data = response.json()
                response_text = data.get('response', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')
                
                print(f"BOT: {response_text[:200]}..." if len(response_text) > 200 else f"BOT: {response_text}")
                print(f"Intent: {data.get('intent', '?')} | Signal: {data.get('user_signal', '?')}")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –æ—Ç—á—ë—Ç–∞
                results['messages'].append({
                    "user": message,
                    "bot": response_text,
                    "intent": data.get('intent'),
                    "signal": data.get('user_signal'),
                    "raw": data
                })
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
                results['messages'].append({
                    "user": message,
                    "error": f"Status {response.status_code}"
                })
                
        except requests.Timeout:
            print(f"‚è±Ô∏è Timeout")
            results['messages'].append({
                "user": message,
                "error": "Timeout"
            })
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            results['messages'].append({
                "user": message,
                "error": str(e)
            })
        
        print("-" * 40)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    save_results(dialogue_id, results)
    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ test_results/{dialogue_id}_simple.md")

def save_results(dialogue_id, results):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ markdown —Ñ–∞–π–ª"""
    
    os.makedirs("test_results", exist_ok=True)
    
    filename = f"test_results/{dialogue_id}_simple.md"
    
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(f"# –¢–µ—Å—Ç –¥–∏–∞–ª–æ–≥–∞: {results['dialogue_name']}\n\n")
        f.write(f"**ID:** {results['dialogue_id']}\n")
        f.write(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {results['description']}\n")
        f.write(f"**–î–∞—Ç–∞:** {results['timestamp']}\n\n")
        f.write("## –î–∏–∞–ª–æ–≥\n\n")
        
        for i, msg in enumerate(results['messages'], 1):
            f.write(f"### –°–æ–æ–±—â–µ–Ω–∏–µ {i}\n\n")
            f.write(f"**USER:** {msg['user']}\n\n")
            
            if 'error' in msg:
                f.write(f"**ERROR:** {msg['error']}\n\n")
            else:
                f.write(f"**BOT:** {msg.get('bot', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')}\n\n")
                f.write(f"**–ú–µ—Ç—Ä–∏–∫–∏:**\n")
                f.write(f"- Intent: {msg.get('intent', '?')}\n")
                f.write(f"- Signal: {msg.get('signal', '?')}\n\n")
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        f.write("## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n")
        f.write(f"- –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(results['messages'])}\n")
        
        errors = [m for m in results['messages'] if 'error' in m]
        if errors:
            f.write(f"- –û—à–∏–±–æ–∫: {len(errors)}\n")
            
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤
        signals = [m.get('signal') for m in results['messages'] if 'signal' in m]
        if signals:
            f.write(f"- –°–∏–≥–Ω–∞–ª—ã: {' ‚Üí '.join(filter(None, dict.fromkeys(signals)))}\n")

def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python http_sandbox_simple.py <dialogue_id>")
        print("–ü—Ä–∏–º–µ—Ä: python http_sandbox_simple.py dialog_5")
        sys.exit(1)
    
    dialogue_id = sys.argv[1]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
    try:
        response = requests.get("http://localhost:8000/health", timeout=2)
        if response.status_code != 200:
            print("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ health check failed")
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python src/main.py")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    run_dialogue(dialogue_id)

if __name__ == "__main__":
    main()