#!/usr/bin/env python3
"""
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏ - –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç
"""

import asyncio
import json
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent / "src"))

from sandbox_v2 import SandboxV2, Colors

async def show_dialogue(scenario_num: int = 1):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π –¥–∏–∞–ª–æ–≥ –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç—ã
    with open("tests/test_comprehensive_dialogues.json", 'r', encoding='utf-8') as f:
        scenarios = json.load(f)
    
    if scenario_num < 1 or scenario_num > len(scenarios):
        print(f"‚ùå –°—Ü–µ–Ω–∞—Ä–∏–π {scenario_num} –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ—Å—Ç—É–ø–Ω–æ: 1-{len(scenarios)}")
        return
    
    scenario = scenarios[scenario_num - 1]
    sandbox = SandboxV2()
    
    print(f"\n{'='*80}")
    print(f"–°–¶–ï–ù–ê–†–ò–ô #{scenario_num}: {scenario['scenario_name']}")
    print(f"–û–∂–∏–¥–∞–µ–º—ã–π —Å–∏–≥–Ω–∞–ª: {scenario['expected_signal']}")
    print(f"{'='*80}\n")
    
    user_id = f"test_user_{scenario_num}"
    all_messages = []
    
    for i, message in enumerate(scenario['steps'], 1):
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        result = await sandbox.process_message(message, user_id, show_details=False)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –≤—ã–≤–æ–¥–∞
        all_messages.append({
            'num': i,
            'user': message,
            'bot': result.response,
            'intent': result.router_status,
            'signal': result.source  # —Ç—É—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å user_signal
        })
    
    # –í—ã–≤–æ–¥–∏–º –≤–µ—Å—å –¥–∏–∞–ª–æ–≥
    for msg in all_messages:
        print(f"\n{Colors.BLUE}‚îÄ‚îÄ‚îÄ‚îÄ –°–æ–æ–±—â–µ–Ω–∏–µ {msg['num']} ‚îÄ‚îÄ‚îÄ‚îÄ{Colors.ENDC}")
        print(f"{Colors.BOLD}üë§ –í–û–ü–†–û–°:{Colors.ENDC}")
        print(f"   {msg['user']}")
        print()
        print(f"{Colors.GREEN}ü§ñ –û–¢–í–ï–¢:{Colors.ENDC}")
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        words = msg['bot'].split()
        lines = []
        current_line = []
        current_length = 0
        
        for word in words:
            if current_length + len(word) + 1 > 80:
                lines.append(' '.join(current_line))
                current_line = [word]
                current_length = len(word)
            else:
                current_line.append(word)
                current_length += len(word) + 1
        
        if current_line:
            lines.append(' '.join(current_line))
        
        for line in lines:
            print(f"   {line}")
        
        print(f"\n   [{msg['intent']}]")
        print(f"   {Colors.DIM}{'‚îÄ'*76}{Colors.ENDC}")

async def main():
    if len(sys.argv) > 1:
        scenario_num = int(sys.argv[1])
    else:
        scenario_num = 1
    
    await show_dialogue(scenario_num)

if __name__ == "__main__":
    asyncio.run(main())