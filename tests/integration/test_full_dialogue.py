#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏
"""

import asyncio
import sys
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ path
sys.path.insert(0, str(Path(__file__).parent / "src"))

from interactive_test import test_pipeline, GLOBAL_HISTORY, GLOBAL_SOCIAL_STATE

async def test_full_dialogue():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –¥–∏–∞–ª–æ–≥ –º–∞–º—ã-–±–ª–æ–≥–µ—Ä–∞"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
    with open('tests/test_scenarios.json', 'r', encoding='utf-8') as f:
        scenarios = json.load(f)
    
    mama_scenario = scenarios[0]
    questions = mama_scenario['steps']
    user_id = 'mama_blogger'
    
    # –°–ë–†–û–° –ü–ê–ú–Ø–¢–ò –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
    GLOBAL_HISTORY.storage.clear()
    GLOBAL_SOCIAL_STATE._store.clear()
    GLOBAL_SOCIAL_STATE._expires.clear()
    print('='*80)
    print('‚úÖ –ü–ê–ú–Ø–¢–¨ –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–©–ï–ù–ê')
    print('='*80)
    
    print('\nüé¨ –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –î—Ä—É–∂–µ–ª—é–±–Ω–∞—è –º–∞–º–∞-–±–ª–æ–≥–µ—Ä')
    print(f'üìù –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {len(questions)}')
    
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º
    for i, question_text in enumerate(questions, 1):
        print('\n' + '='*80)
        print(f'üìã –°–¶–ï–ù–ê–†–ò–ô #1: –î—Ä—É–∂–µ–ª—é–±–Ω–∞—è –º–∞–º–∞-–±–ª–æ–≥–µ—Ä')
        print(f'üìç –í–æ–ø—Ä–æ—Å {i}/{len(questions)}')
        print('='*80)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é
        history = GLOBAL_HISTORY.get_history(user_id)
        print(f'üìö –í –ø–∞–º—è—Ç–∏ —Å–µ–π—á–∞—Å: {len(history)} —Å–æ–æ–±—â–µ–Ω–∏–π')
        if history:
            print(f'   –ü–æ—Å–ª–µ–¥–Ω–µ–µ: "{history[-1]["content"][:50]}..."')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º
        print('\nüîÑ –ó–∞–ø—É—Å–∫–∞—é pipeline...\n')
        result = await test_pipeline(question_text, user_id, show_details=True)
        
        # –ü–∞—É–∑–∞ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        await asyncio.sleep(0.5)
        
        print('\n' + '='*80)
        print('üìä –ú–û–ô –ê–ù–ê–õ–ò–ó:')
        print('='*80)
        
        # –ê–Ω–∞–ª–∏–∑ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–æ–º–µ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞
        if i == 1:
            print('–í–æ–ø—Ä–æ—Å 1: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –∫—É—Ä—Å—ã')
            print('- Regex –¥–æ–ª–∂–µ–Ω –±—ã–ª –ø–æ–π–º–∞—Ç—å "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç"')
            print('- Claude –¥–∞–ª –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–æ "–Æ–Ω—ã–π –æ—Ä–∞—Ç–æ—Ä"')
        elif i == 2:
            print('–í–æ–ø—Ä–æ—Å 2: –¶–µ–Ω–∞ + –≤—Ä–µ–º—è + —Å—Ç–µ—Å–Ω–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å')
            print('- "–°—É–ø–µ—Ä!" - —ç—Ç–æ –ù–ï –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ')
            print('- –î–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –≤–æ–ø—Ä–æ—Å–∞ 1')
        elif i == 3:
            print('–í–æ–ø—Ä–æ—Å 3: –°–∫–∏–¥–∫–∞ –∑–∞ –¥–≤–æ–∏—Ö –¥–µ—Ç–µ–π')
        elif i == 4:
            print('–í–æ–ø—Ä–æ—Å 4: –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π')
        elif i == 5:
            print('–í–æ–ø—Ä–æ—Å 5: –ü—Ä–æ—â–∞–Ω–∏–µ')
        
        # –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ü–û–ö–ê–ó–´–í–ê–ï–ú –ü–û–õ–ù–´–ô –í–û–ü–†–û–° –ò –û–¢–í–ï–¢
        print('\n' + '='*80)
        print('üî¥üî¥üî¥ –ü–û–õ–ù–´–ô –í–û–ü–†–û–° –ò –ü–û–õ–ù–´–ô –û–¢–í–ï–¢:')
        print('='*80)
        print('\nüë§ –í–û–ü–†–û–° –ü–û–õ–ù–û–°–¢–¨–Æ:')
        print(question_text)
        print('\nü§ñ –û–¢–í–ï–¢ –ü–û–õ–ù–û–°–¢–¨–Æ:')
        print(result)
        print('='*80)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–æ—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é
        history_after = GLOBAL_HISTORY.get_history(user_id)
        print(f'\nüìö –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –≤ –ø–∞–º—è—Ç–∏: {len(history_after)} —Å–æ–æ–±—â–µ–Ω–∏–π')
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –≤–æ–ø—Ä–æ—Å–∞–º–∏
        if i < len(questions):
            print(f'\n‚è∏Ô∏è  –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤–æ–ø—Ä–æ—Å—É {i+1}/{len(questions)}...')
            await asyncio.sleep(2)
    
    print('\n' + '='*80)
    print('‚úÖ –î–ò–ê–õ–û–ì –ó–ê–í–ï–†–®–ï–ù!')
    print(f'üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤')
    print(f'üìö –§–∏–Ω–∞–ª—å–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏: {len(GLOBAL_HISTORY.get_history(user_id))} —Å–æ–æ–±—â–µ–Ω–∏–π')
    print('='*80)

if __name__ == "__main__":
    asyncio.run(test_full_dialogue())