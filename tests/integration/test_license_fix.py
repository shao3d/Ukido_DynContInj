#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ª–∏—Ü–µ–Ω–∑–∏–∏
"""

import asyncio
import json
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, str(Path(__file__).parent / 'src'))

from main import app
from fastapi.testclient import TestClient
import httpx

async def test_license_question():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å –æ –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢: –í–æ–ø—Ä–æ—Å –æ –ª–∏—Ü–µ–Ω–∑–∏–∏")
    print("="*60)
    
    # –°–æ–∑–¥–∞–µ–º async client
    async with httpx.AsyncClient(app=app, base_url="http://test") as client:
        # –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ª–∏—Ü–µ–Ω–∑–∏–∏
        test_cases = [
            "–ü–æ–∫–∞–∂–∏—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏—é –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å!",
            "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –ª–∏—Ü–µ–Ω–∑–∏—è?",
            "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç –ø—Ä–∞–≤–æ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ?"
        ]
        
        for i, question in enumerate(test_cases, 1):
            print(f"\nüìù –¢–µ—Å—Ç {i}: {question}")
            
            response = await client.post(
                "/chat",
                json={"user_id": "test_user", "message": question}
            )
            
            data = response.json()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            intent = data.get("intent", "unknown")
            print(f"   –°—Ç–∞—Ç—É—Å: {intent}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
            response_text = data.get("response", "")
            print(f"   –û—Ç–≤–µ—Ç: {response_text[:200]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
            documents = data.get("relevant_documents", [])
            print(f"   –î–æ–∫—É–º–µ–Ω—Ç—ã: {documents}")
            
            # –û—Ü–µ–Ω–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if intent == "success" and "safety_and_trust.md" in documents:
                print("   ‚úÖ –£–°–ü–ï–•: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞")
            elif intent == "offtopic":
                print("   ‚ùå –û–®–ò–ë–ö–ê: –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ –∫–∞–∫ offtopic")
            else:
                print(f"   ‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            
            print("-" * 40)

if __name__ == "__main__":
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ª–∏—Ü–µ–Ω–∑–∏–∏...")
    asyncio.run(test_license_question())
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")