#!/usr/bin/env python3
"""
Collaborative —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –≤—ã–≤–æ–¥–æ–º Q&A
"""

import asyncio
import sys
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ path
sys.path.insert(0, str(Path(__file__).parent / "src"))

from interactive_test import test_pipeline, GLOBAL_HISTORY, GLOBAL_SOCIAL_STATE

async def test_question(question_text, question_num, total_questions, user_id='mama_blogger'):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å —Å –ø–æ–ª–Ω—ã–º –≤—ã–≤–æ–¥–æ–º"""
    
    print('\n' + '='*80)
    print(f'üìã –°–¶–ï–ù–ê–†–ò–ô #1: –î—Ä—É–∂–µ–ª—é–±–Ω–∞—è –º–∞–º–∞-–±–ª–æ–≥–µ—Ä')
    print(f'üìç –í–æ–ø—Ä–æ—Å {question_num}/{total_questions}')
    print('='*80)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é
    history = GLOBAL_HISTORY.get_history(user_id)
    print(f'üìö –í –ø–∞–º—è—Ç–∏ {len(history)} —Å–æ–æ–±—â–µ–Ω–∏–π')
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    result = await test_pipeline(question_text, user_id, show_details=True)
    
    # –°–ù–ê–ß–ê–õ–ê –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ü–û–õ–ù–´–ô –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç
    print('\n' + '='*80)
    print('üî¥ –ü–û–õ–ù–´–ô –í–û–ü–†–û–° –ò –û–¢–í–ï–¢:')
    print('='*80)
    print('\nüë§ –í–û–ü–†–û–°:')
    print(question_text)
    print('\nü§ñ –û–¢–í–ï–¢:')
    print(result)
    print('='*80)
    
    return result

# –î–ª—è –∑–∞–ø—É—Å–∫–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
if __name__ == "__main__":
    import sys
    if len(sys.argv) > 1:
        question_num = int(sys.argv[1])
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
        with open('tests/test_scenarios.json', 'r', encoding='utf-8') as f:
            scenarios = json.load(f)
        
        mama_scenario = scenarios[0]
        questions = mama_scenario['steps']
        
        if question_num == 1:
            # –°–±—Ä–æ—Å –ø–∞–º—è—Ç–∏ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º –≤–æ–ø—Ä–æ—Å–æ–º
            GLOBAL_HISTORY.storage.clear()
            GLOBAL_SOCIAL_STATE._store.clear()
            GLOBAL_SOCIAL_STATE._expires.clear()
            print('‚úÖ –ü–ê–ú–Ø–¢–¨ –û–ß–ò–©–ï–ù–ê')
        
        asyncio.run(test_question(questions[question_num-1], question_num, len(questions)))
    else:
        print("Usage: python test_collaborative.py <question_number>")