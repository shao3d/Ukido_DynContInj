#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –≤–µ—Å—ë–ª–æ–≥–æ –ø–∞–ø—ã-–∞–π—Ç–∏—à–Ω–∏–∫–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —é–º–æ—Ä–∞ –ñ–≤–∞–Ω–µ—Ü–∫–æ–≥–æ
"""

import json
import time
import requests
from datetime import datetime

def run_funny_dad_test():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —é–º–æ—Ä–∞"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç
    with open('test_funny_it_dad.json', 'r', encoding='utf-8') as f:
        test_data = json.load(f)
    
    scenario = test_data['scenarios'][0]
    dialogue_id = scenario['id']
    user_id = f"{scenario['user_id']}_{int(time.time())}"
    
    print(f"\n{'='*60}")
    print(f"üòÇ –¢–ï–°–¢: {scenario['name']}")
    print(f"üìù ID: {dialogue_id}")
    print(f"üë§ User: {user_id}")
    print(f"üéØ –¶–µ–ª—å: –ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ –Æ–ú–û–† –ñ–í–ê–ù–ï–¶–ö–û–ì–û")
    print(f"üé™ –û–∂–∏–¥–∞–µ–º—ã–π —é–º–æ—Ä: {scenario.get('expected_humor', 'N/A')}")
    print(f"{'='*60}\n")
    
    results = []
    humor_count = 0
    
    for i, message in enumerate(scenario['messages'], 1):
        print(f"\n{'‚îÄ'*50}")
        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ {i}/{len(scenario['messages'])}")
        print(f"ü§™ –ü–∞–ø–∞: {message[:70]}{'...' if len(message) > 70 else ''}")
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            response = requests.post(
                'http://localhost:8000/chat',
                json={'user_id': user_id, 'message': message},
                timeout=30
            )
            
            if response.status_code == 200:
                data = response.json()
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
                metadata = data.get('metadata', {})
                intent = metadata.get('intent', data.get('intent', 'unknown'))
                user_signal = metadata.get('user_signal', data.get('user_signal', 'unknown'))
                humor = metadata.get('humor_generated', False)
                cta_added = metadata.get('cta_added', False)
                
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ —é–º–æ—Ä–∞
                if humor:
                    humor_count += 1
                
                # –≠–º–æ–¥–∑–∏ –¥–ª—è —é–º–æ—Ä–∞
                humor_emoji = "üé≠ –Æ–ú–û–†!" if humor else ""
                
                # –¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è intent
                intent_emoji = {
                    'success': '‚úÖ',
                    'offtopic': 'üé™',
                    'need_simplification': 'ü§î'
                }.get(intent, '‚ùì')
                
                print(f"ü§ñ Ukido: {data['response'][:120]}{'...' if len(data['response']) > 120 else ''}")
                print(f"üìä {intent_emoji} Intent: {intent} | Signal: {user_signal} {humor_emoji}")
                
                results.append({
                    'message': message,
                    'response': data['response'],
                    'intent': intent,
                    'user_signal': user_signal,
                    'humor_generated': humor,
                    'cta_added': cta_added
                })
                
                time.sleep(0.3)
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print(f"\n{'='*60}")
    print("üé≠ –ê–ù–ê–õ–ò–ó –Æ–ú–û–†–ê:")
    print(f"{'='*60}")
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —é–º–æ—Ä–∞
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –Æ–ú–û–†–ê:")
    print(f"  üé≠ –í—Å–µ–≥–æ —à—É—Ç–æ–∫: {humor_count} –∏–∑ {len(results)}")
    print(f"  üìà –ü—Ä–æ—Ü–µ–Ω—Ç —é–º–æ—Ä–∞: {humor_count * 100 // len(results)}%")
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–π —à—É—Ç–∫–∏
    humor_messages = []
    standard_responses = []
    for i, r in enumerate(results, 1):
        if r['humor_generated']:
            humor_messages.append((i, r['message'][:50], r['response'][:100]))
        elif r['intent'] == 'offtopic' and not r['humor_generated']:
            standard_responses.append((i, r['response'][:100]))
    
    if humor_messages:
        print(f"\nüé™ –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ô –Æ–ú–û–†:")
        for num, trigger, joke in humor_messages:
            print(f"  #{num}: –¢—Ä–∏–≥–≥–µ—Ä: {trigger}...")
            print(f"        –®—É—Ç–∫–∞: {joke}...")
    
    if standard_responses:
        print(f"\nüìù –°–¢–ê–ù–î–ê–†–¢–ù–´–ï –û–¢–í–ï–¢–´ –ù–ê OFFTOPIC (–±–µ–∑ —é–º–æ—Ä–∞):")
        for num, response in standard_responses:
            print(f"  #{num}: {response}...")
    
    # –ê–Ω–∞–ª–∏–∑ intent'–æ–≤
    intents = {}
    for r in results:
        intent = r['intent']
        intents[intent] = intents.get(intent, 0) + 1
    
    print(f"\nüìà –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï INTENT'–æ–≤:")
    for intent, count in intents.items():
        print(f"  {intent}: {count} —Ä–∞–∑")
    
    # –ê–Ω–∞–ª–∏–∑ —Å–∏–≥–Ω–∞–ª–æ–≤
    signals = {}
    for r in results:
        signal = r['user_signal']
        signals[signal] = signals.get(signal, 0) + 1
    
    print(f"\nüö¶ –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –°–ò–ì–ù–ê–õ–û–í:")
    for signal, count in signals.items():
        print(f"  {signal}: {count} —Ä–∞–∑")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —é–º–æ—Ä–∞
    print(f"\nüö´ –ê–ù–ê–õ–ò–ó –ë–õ–û–ö–ò–†–û–í–û–ö:")
    blocked_signals = ['anxiety_about_child', 'price_sensitive']
    blocks_found = False
    for signal in blocked_signals:
        if signal in signals:
            print(f"  ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω –±–ª–æ–∫–∏—Ä—É—é—â–∏–π —Å–∏–≥–Ω–∞–ª: {signal} ({signals[signal]} —Ä–∞–∑)")
            blocks_found = True
    if not blocks_found:
        print(f"  ‚úÖ –ë–ª–æ–∫–∏—Ä—É—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã –ù–ï –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã - —é–º–æ—Ä –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å!")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Rate Limiting
    print(f"\n‚è±Ô∏è RATE LIMITING:")
    if humor_count <= 3:
        print(f"  ‚úÖ Rate limiting —Å–æ–±–ª—é–¥—ë–Ω (max 3 —à—É—Ç–∫–∏ –≤ —á–∞—Å)")
    else:
        print(f"  ‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç! {humor_count} > 3 —à—É—Ç–æ–∫")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    print(f"\n{'='*60}")
    print("üèÜ –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –Æ–ú–û–†–ê:")
    print(f"{'='*60}")
    
    if humor_count >= 3:
        print("‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê –û–¢–õ–ò–ß–ù–û! –ñ–≤–∞–Ω–µ—Ü–∫–∏–π –≤ –¥–µ–ª–µ! üé≠")
        print("–°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —é–º–æ—Ä –Ω–∞ –∞–±—Å—É—Ä–¥–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    elif humor_count >= 2:
        print("‚≠ê‚≠ê‚≠ê‚≠ê –•–û–†–û–®–û! –Æ–º–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("–°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —à—É—Ç–∏—Ç")
    elif humor_count >= 1:
        print("‚≠ê‚≠ê‚≠ê –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û. –Æ–º–æ—Ä –µ–ª–µ –∂–∏–≤")
        print("–°–∏—Å—Ç–µ–º–∞ —Ä–µ–¥–∫–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —é–º–æ—Ä")
    else:
        print("‚≠ê‚≠ê –ü–†–û–í–ê–õ! –Æ–º–æ—Ä –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª—Å—è üò¢")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    print(f"\nüìã –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
    offtopic_count = intents.get('offtopic', 0)
    print(f"  Offtopic —Å–æ–æ–±—â–µ–Ω–∏–π: {offtopic_count}")
    print(f"  –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —é–º–æ—Ä–∞: 33%")
    print(f"  –û–∂–∏–¥–∞–µ–º—ã–π —é–º–æ—Ä: ~{offtopic_count * 33 // 100} —à—É—Ç–æ–∫")
    print(f"  –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —é–º–æ—Ä: {humor_count} —à—É—Ç–æ–∫")
    
    if humor_count < offtopic_count * 0.2:  # –ú–µ–Ω—å—à–µ 20% –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–≥–æ
        print(f"\n  ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –Æ–º–æ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∂–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ!")
        print(f"  –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print(f"  1. –°—Ä–∞–±–æ—Ç–∞–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ (anxiety/price_sensitive)")
        print(f"  2. Pure social states –±–ª–æ–∫–∏—Ä—É—é—Ç —é–º–æ—Ä")
        print(f"  3. Rate limiting (max 3 –≤ —á–∞—Å)")
        print(f"  4. Random –Ω–µ –≤ –Ω–∞—à—É –ø–æ–ª—å–∑—É")
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    report_file = f"test_results/funny_dad_{timestamp}.md"
    
    with open(report_file, 'w', encoding='utf-8') as f:
        f.write(f"# –û—Ç—á—ë—Ç —Ç–µ—Å—Ç–∞: {scenario['name']}\n\n")
        f.write(f"**–î–∞—Ç–∞:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
        f.write(f"**User ID:** {user_id}\n\n")
        f.write(f"## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —é–º–æ—Ä–∞\n\n")
        f.write(f"- **–í—Å–µ–≥–æ —à—É—Ç–æ–∫:** {humor_count}/{len(results)}\n")
        f.write(f"- **–ü—Ä–æ—Ü–µ–Ω—Ç —é–º–æ—Ä–∞:** {humor_count * 100 // len(results)}%\n")
        f.write(f"- **Offtopic —Å–æ–æ–±—â–µ–Ω–∏–π:** {offtopic_count}\n")
        f.write(f"- **–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏:** {'–î–∞' if blocks_found else '–ù–µ—Ç'}\n\n")
        
        f.write("## –î–∏–∞–ª–æ–≥\n\n")
        for i, r in enumerate(results, 1):
            humor_mark = " üé≠ **[–Æ–ú–û–† –ê–ö–¢–ò–í–ò–†–û–í–ê–ù]**" if r['humor_generated'] else ""
            
            f.write(f"### –°–æ–æ–±—â–µ–Ω–∏–µ {i}{humor_mark}\n\n")
            f.write(f"**–ü–∞–ø–∞:** {r['message']}\n\n")
            f.write(f"**Ukido:** {r['response']}\n\n")
            f.write(f"*Intent: {r['intent']}, Signal: {r['user_signal']}*\n\n")
            f.write("---\n\n")
    
    print(f"\nüìÅ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {report_file}")

if __name__ == "__main__":
    run_funny_dad_test()