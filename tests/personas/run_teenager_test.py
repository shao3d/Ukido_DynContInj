#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø–æ–¥—Ä–æ—Å—Ç–∫–∞-–±—É–Ω—Ç–∞—Ä—è —á–µ—Ä–µ–∑ API
"""

import json
import time
import requests
from datetime import datetime

def run_teenager_test():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–º"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç
    with open('test_teenager_rebel.json', 'r', encoding='utf-8') as f:
        test_data = json.load(f)
    
    scenario = test_data['scenarios'][0]
    dialogue_id = scenario['id']
    user_id = f"{scenario['user_id']}_{int(time.time())}"
    
    print(f"\n{'='*60}")
    print(f"üõπ –¢–ï–°–¢: {scenario['name']}")
    print(f"üìù ID: {dialogue_id}")
    print(f"üë§ User: {user_id}")
    print(f"üéØ –û–∂–∏–¥–∞–µ–º—ã–π –ø–µ—Ä–µ—Ö–æ–¥: {scenario.get('expected_signal_transition', 'N/A')}")
    print(f"üòé –û–∂–∏–¥–∞–µ–º—ã–π —é–º–æ—Ä: {scenario.get('expected_humor', 'N/A')}")
    print(f"{'='*60}\n")
    
    results = []
    
    for i, message in enumerate(scenario['messages'], 1):
        print(f"\n{'‚îÄ'*50}")
        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ {i}/{len(scenario['messages'])}")
        print(f"üõπ –ü–æ–¥—Ä–æ—Å—Ç–æ–∫: {message[:80]}{'...' if len(message) > 80 else ''}")
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            response = requests.post(
                'http://localhost:8000/chat',
                json={'user_id': user_id, 'message': message},
                timeout=30
            )
            
            if response.status_code == 200:
                data = response.json()
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
                metadata = data.get('metadata', {})
                intent = metadata.get('intent', data.get('intent', 'unknown'))
                user_signal = metadata.get('user_signal', data.get('user_signal', 'unknown'))
                humor = metadata.get('humor_generated', False)
                cta_added = metadata.get('cta_added', False)
                
                print(f"ü§ñ Ukido: {data['response'][:150]}{'...' if len(data['response']) > 150 else ''}")
                print(f"üìä Intent: {intent} | Signal: {user_signal} | Humor: {'‚úÖ' if humor else '‚ùå'} | CTA: {'‚úÖ' if cta_added else '‚ùå'}")
                
                results.append({
                    'message': message,
                    'response': data['response'],
                    'intent': intent,
                    'user_signal': user_signal,
                    'humor_generated': humor,
                    'cta_added': cta_added
                })
                
                time.sleep(0.3)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                print(f"   {response.text[:200]}")
                
        except requests.exceptions.Timeout:
            print(f"‚è±Ô∏è Timeout –ø–æ—Å–ª–µ 30 —Å–µ–∫—É–Ω–¥")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print(f"\n{'='*60}")
    print("üìà –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    print(f"{'='*60}")
    
    # –ü–æ–¥—Å—á—ë—Ç —é–º–æ—Ä–∞
    humor_count = sum(1 for r in results if r['humor_generated'])
    print(f"üòé –Æ–º–æ—Ä —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {humor_count} —Ä–∞–∑ (–æ–∂–∏–¥–∞–ª–æ—Å—å 2-3)")
    
    # –ü–æ–¥—Å—á—ë—Ç CTA
    cta_count = sum(1 for r in results if r['cta_added'])
    print(f"üì¢ CTA –¥–æ–±–∞–≤–ª–µ–Ω: {cta_count} —Ä–∞–∑")
    
    # –ü–µ—Ä–µ—Ö–æ–¥—ã —Å–∏–≥–Ω–∞–ª–æ–≤
    signals = [r['user_signal'] for r in results]
    unique_signals = []
    for s in signals:
        if not unique_signals or s != unique_signals[-1]:
            unique_signals.append(s)
    
    print(f"üîÑ –ü–µ—Ä–µ—Ö–æ–¥—ã —Å–∏–≥–Ω–∞–ª–æ–≤: {' ‚Üí '.join(unique_signals)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø–æ–¥ –ø–æ–¥—Ä–æ—Å—Ç–∫–∞
    teen_words = ['–∫—Ä—É—Ç–æ', '–ø—Ä–∏–∫–æ–ª—å–Ω', '–∫–ª—ë–≤', '—Ç–æ–ø', '–∫—Ä—É—Ç', '–±–ª–æ–≥–µ—Ä', '—Å–∫–∏–ª–ª', '–ª–∏–¥–µ—Ä']
    teen_adaptation = 0
    for r in results:
        if any(word in r['response'].lower() for word in teen_words):
            teen_adaptation += 1
    
    print(f"üõπ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –ø–æ–¥—Ä–æ—Å—Ç–∫–∞: {teen_adaptation}/{len(results)} –æ—Ç–≤–µ—Ç–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏
    parent_conflict_handled = False
    for r in results:
        if '—Ä–æ–¥–∏—Ç–µ–ª' in r['message'].lower():
            if any(word in r['response'].lower() for word in ['–ø–æ–Ω–∏–º–∞', '–ø–æ–¥–¥–µ—Ä–∂', '–ø–æ–º–æ–∂', '—Ä–æ–¥–∏—Ç–µ–ª']):
                parent_conflict_handled = True
                break
    
    print(f"üë®‚Äçüë©‚Äçüëß –ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {'‚úÖ' if parent_conflict_handled else '‚ùå'}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–µ—Ç—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏
    childish_words = ['–¥–µ—Ç–∫–∏', '–º–∞–ª—ã—à–∏', '—Ä–µ–±—è—Ç–∫–∏', '–¥–µ—Ç–æ—á–∫–∏']
    childish_count = 0
    for r in results:
        if any(word in r['response'].lower() for word in childish_words):
            childish_count += 1
    
    print(f"üë∂ –î–µ—Ç—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ (–Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ): {childish_count} —Ä–∞–∑")
    
    # –û—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏
    print(f"\n{'='*60}")
    print("üéØ –û–¶–ï–ù–ö–ê –¢–ï–°–¢–ê:")
    
    success_criteria = [
        ('–Æ–º–æ—Ä –≤ –Ω–æ—Ä–º–µ', 1 <= humor_count <= 4),
        ('CTA –¥–æ–±–∞–≤–ª–µ–Ω', cta_count >= 1),
        ('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã', 'ready_to_buy' in signals),
        ('–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –ø–æ–¥—Ä–æ—Å—Ç–∫–∞', teen_adaptation >= 3),
        ('–ö–æ–Ω—Ñ–ª–∏–∫—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω', parent_conflict_handled),
        ('–ë–µ–∑ –¥–µ—Ç—Å–∫–∏—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫', childish_count <= 1)
    ]
    
    passed = 0
    for name, result in success_criteria:
        status = '‚úÖ' if result else '‚ùå'
        print(f"{status} {name}")
        if result:
            passed += 1
    
    print(f"\nüèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{len(success_criteria)} –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    report_file = f"test_results/teenager_rebel_{timestamp}.md"
    
    with open(report_file, 'w', encoding='utf-8') as f:
        f.write(f"# –û—Ç—á—ë—Ç —Ç–µ—Å—Ç–∞: {scenario['name']}\n\n")
        f.write(f"**–î–∞—Ç–∞:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
        f.write(f"**User ID:** {user_id}\n\n")
        f.write(f"## –†–µ–∑—É–ª—å—Ç–∞—Ç—ã\n\n")
        f.write(f"- **–Æ–º–æ—Ä:** {humor_count} —Ä–∞–∑ (–æ–∂–∏–¥–∞–ª–æ—Å—å 2-3)\n")
        f.write(f"- **CTA:** {cta_count} —Ä–∞–∑\n")
        f.write(f"- **–ü–µ—Ä–µ—Ö–æ–¥—ã:** {' ‚Üí '.join(unique_signals)}\n")
        f.write(f"- **–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –ø–æ–¥—Ä–æ—Å—Ç–∫–∞:** {teen_adaptation}/{len(results)}\n")
        f.write(f"- **–ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏:** {'–û–±—Ä–∞–±–æ—Ç–∞–Ω' if parent_conflict_handled else '–ù–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω'}\n")
        f.write(f"- **–î–µ—Ç—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏:** {childish_count}\n\n")
        
        f.write("## –î–∏–∞–ª–æ–≥\n\n")
        for i, r in enumerate(results, 1):
            f.write(f"### –°–æ–æ–±—â–µ–Ω–∏–µ {i}\n\n")
            f.write(f"**üõπ –ü–æ–¥—Ä–æ—Å—Ç–æ–∫:** {r['message']}\n\n")
            f.write(f"**ü§ñ Ukido:** {r['response']}\n\n")
            f.write(f"*–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: intent={r['intent']}, signal={r['user_signal']}, "
                   f"humor={r['humor_generated']}, cta={r['cta_added']}*\n\n")
            f.write("---\n\n")
    
    print(f"\nüìÅ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {report_file}")

if __name__ == "__main__":
    run_teenager_test()