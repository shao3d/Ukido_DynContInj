#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–º—è—Ç–∏ - –æ–¥–∏–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π —Å 8 —à–∞–≥–∞–º–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–±—ã–≤—á–∏–≤–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π (5 –ø–∞—Ä –≤–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç)
"""

import asyncio
import json
import sys
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(str(Path(__file__).parent.parent / "src"))

from main import app
import httpx


async def test_memory():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—Ü–µ–Ω–∞—Ä–∏–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–∞–º—è—Ç–∏"""
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è —Ç–µ—Å—Ç–∞
    scenario = {
        "scenario_name": "–î–ª–∏–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–∞–º—è—Ç–∏",
        "description": "8 —à–∞–≥–æ–≤ –¥–ª—è —è–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–±—ã–≤—á–∏–≤–æ—Å—Ç–∏ –ø–æ—Å–ª–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π",
        "steps": [
            "–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è —Å—ã–Ω –ú–∞–∫—Å–∏–º, 9 –ª–µ—Ç. –ö–∞–∫–æ–π –∫—É—Ä—Å –µ–º—É –ø–æ–¥–æ–π–¥–µ—Ç –ª—É—á—à–µ –≤—Å–µ–≥–æ?",
            "–û—Ç–ª–∏—á–Ω–æ! –ê —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –º–µ—Å—è—Ü –æ–±—É—á–µ–Ω–∏—è –Ω–∞ –∫—É—Ä—Å–µ –Æ–Ω—ã–π –û—Ä–∞—Ç–æ—Ä?",
            "–ü–æ–Ω—è—Ç–Ω–æ. –ê –∫–∞–∫–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω–∞–≤—ã–∫–∏ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç —ç—Ç–æ—Ç –∫—É—Ä—Å?",
            "–ö–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π? –í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è?",
            "–ê –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –º–Ω–æ–≥–æ –∑–∞–¥–∞—é—Ç –Ω–∞ –∫—É—Ä—Å–µ?",
            "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –æ–Ω–ª–∞–π–Ω –∏–ª–∏ —Ç–æ–ª—å–∫–æ –æ—Ñ–ª–∞–π–Ω?",
            "–ù–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ - –∫–∞–∫ –∑–æ–≤—É—Ç –º–æ–µ–≥–æ —Å—ã–Ω–∞ –∏ —Å–∫–æ–ª—å–∫–æ –µ–º—É –ª–µ—Ç? –í—ã –∂–µ –ø–æ–º–Ω–∏—Ç–µ –∏–∑ –Ω–∞—á–∞–ª–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞?",
            "–ò –µ—â–µ —Ä–∞–∑ - –∫–∞–∫—É—é —Ü–µ–Ω—É –∑–∞ –º–µ—Å—è—Ü –∫—É—Ä—Å–∞ –Æ–Ω—ã–π –û—Ä–∞—Ç–æ—Ä –≤—ã –Ω–∞–∑—ã–≤–∞–ª–∏ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ?"
        ]
    }
    
    print("\n" + "=" * 80)
    print("üß† –¢–ï–°–¢ –ü–ê–ú–Ø–¢–ò –°–ò–°–¢–ï–ú–´ (–æ–±—Ä–µ–∑–∫–∞ –ø–æ—Å–ª–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π)")
    print("=" * 80)
    print(f"üìã –°—Ü–µ–Ω–∞—Ä–∏–π: {scenario['scenario_name']}")
    print(f"üìù {scenario['description']}")
    print(f"üìä –®–∞–≥–æ–≤: {len(scenario['steps'])}")
    print("\n" + "-" * 80)
    
    # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π user_id –¥–ª—è —Ç–µ—Å—Ç–∞
    user_id = f"memory_test_{datetime.now().timestamp()}"
    results = []
    
    async with httpx.AsyncClient(app=app, base_url="http://test") as client:
        for idx, user_message in enumerate(scenario['steps'], 1):
            print(f"\nüîπ –®–∞–≥ {idx}/8:")
            print(f"üë§ User: {user_message[:60]}...")
            
            try:
                payload = {"user_id": user_id, "message": user_message}
                resp = await client.post("/chat", json=payload, timeout=60.0)
                
                if resp.status_code != 200:
                    print(f"‚ùå HTTP {resp.status_code}")
                    continue
                
                data = resp.json()
                response_text = data.get("response", "")
                
                print(f"ü§ñ Bot: {response_text[:100]}...")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                results.append({
                    "step": idx,
                    "user_message": user_message,
                    "bot_response": response_text,
                    "intent": data.get("intent"),
                    "documents": data.get("relevant_documents", [])
                })
                
                # –ê–Ω–∞–ª–∏–∑ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
                if idx == 7:
                    print("\n‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ú–û–ú–ï–ù–¢ - –®–∞–≥ 7:")
                    print("   –°–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç –∏–∑ —à–∞–≥–∞ 1")
                    print("   –ü–æ—Å–ª–µ 12 —Å–æ–æ–±—â–µ–Ω–∏–π (6 –ø–∞—Ä) –∏—Å—Ç–æ—Ä–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–±—Ä–µ–∑–∞–Ω–∞")
                    if "–ú–∞–∫—Å–∏–º" in response_text or "9 –ª–µ—Ç" in response_text:
                        print("   ‚úÖ –°–ò–°–¢–ï–ú–ê –ü–û–ú–ù–ò–¢ (–∏—Å—Ç–æ—Ä–∏—è –µ—â–µ –Ω–µ –æ–±—Ä–µ–∑–∞–Ω–∞)")
                    else:
                        print("   üî¥ –°–ò–°–¢–ï–ú–ê –ó–ê–ë–´–õ–ê (–∏—Å—Ç–æ—Ä–∏—è –æ–±—Ä–µ–∑–∞–Ω–∞ –ø–æ—Å–ª–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π)")
                
                if idx == 8:
                    print("\n‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ú–û–ú–ï–ù–¢ - –®–∞–≥ 8:")
                    print("   –°–ø—Ä–∞—à–∏–≤–∞–µ–º —Ü–µ–Ω—É –∏–∑ —à–∞–≥–∞ 2")
                    print("   –ü–æ—Å–ª–µ 14 —Å–æ–æ–±—â–µ–Ω–∏–π (7 –ø–∞—Ä) —à–∞–≥ 2 —Ç–æ—á–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±—ã—Ç")
                    if "6,000" in response_text or "6000" in response_text:
                        print("   ‚úÖ –°–ò–°–¢–ï–ú–ê –ü–û–ú–ù–ò–¢ (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ!)")
                    else:
                        print("   üî¥ –°–ò–°–¢–ï–ú–ê –ó–ê–ë–´–õ–ê (–æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ)")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            
            await asyncio.sleep(0.3)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
    print("\n" + "=" * 80)
    print("üìä –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    print("=" * 80)
    
    print("\nüìù –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞):")
    for i, r in enumerate(results, 1):
        print(f"  –®–∞–≥ {i}: {r['user_message'][:50]}...")
        
    print("\nüßÆ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø–∞–º—è—Ç–∏:")
    print("  ‚Ä¢ –õ–∏–º–∏—Ç –∏—Å—Ç–æ—Ä–∏–∏: 10 —Å–æ–æ–±—â–µ–Ω–∏–π (5 –ø–∞—Ä –≤–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç)")
    print("  ‚Ä¢ –ü–æ—Å–ª–µ —à–∞–≥–∞ 5: –≤ –∏—Å—Ç–æ—Ä–∏–∏ 10 —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("  ‚Ä¢ –ü–æ—Å–ª–µ —à–∞–≥–∞ 6: –≤ –∏—Å—Ç–æ—Ä–∏–∏ 12 —Å–æ–æ–±—â–µ–Ω–∏–π ‚Üí –æ–±—Ä–µ–∑–∫–∞ –¥–æ 10")
    print("  ‚Ä¢ –ù–∞ —à–∞–≥–µ 7: —à–∞–≥ 1 –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±—ã—Ç")
    print("  ‚Ä¢ –ù–∞ —à–∞–≥–µ 8: —à–∞–≥–∏ 1-2 –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–±—ã—Ç—ã")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    reports_dir = Path(__file__).parent / "reports"
    reports_dir.mkdir(exist_ok=True)
    
    output_file = reports_dir / f"test_memory_{timestamp}.json"
    with open(output_file, "w", encoding="utf-8") as f:
        json.dump({
            "timestamp": datetime.now().isoformat(),
            "scenario": scenario,
            "results": results
        }, f, ensure_ascii=False, indent=2)
    
    print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_file.relative_to(Path.cwd())}")


if __name__ == "__main__":
    asyncio.run(test_memory())